package sf.ics.cc.sessionmanager.ctiservice;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.mockito.Matchers.anyInt;
import static org.mockito.Matchers.anyObject;
import static org.mockito.Matchers.anyString;
import static org.powermock.api.mockito.PowerMockito.doNothing;
import static org.powermock.api.mockito.PowerMockito.doReturn;
import static org.powermock.api.mockito.PowerMockito.doThrow;
import static sf.ics.cc.sessionmanager.util.Constants.STATUS_CODE;
import static sf.ics.cc.sessionmanager.util.Constants.TEAM_LOGOUT_REASON_CODE;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.TimeoutException;

import javax.websocket.RemoteEndpoint.Async;
import javax.websocket.Session;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.runners.MockitoJUnitRunner;
import org.powermock.api.mockito.PowerMockito;

import sf.ics.cc.sessionmanager.util.AgentSessionInfo;
import sf.ics.cc.sessionmanager.util.Constants;
import sf.ics.cc.sessionmanager.util.SFAgent;
import sf.ics.cc.sessionmanager.util.SessionMessageHandler;

import com.cisco.cse.ctiserverlib.cil.Agent;
import com.cisco.cse.ctiserverlib.cil.Arguments;
import com.cisco.cse.ctiserverlib.cil.Call;
import com.cisco.cse.ctiserverlib.cil.CilRefArg;
import com.cisco.cse.ctiserverlib.cil.CtiSession;
import com.cisco.cse.ctiserverlib.cil.Cti_Enums;
import com.cisco.cse.ctiserverlib.cil.SkillGroup;
import com.cisco.cse.ctiserverlib.cil.Team;
import com.cisco.cse.ctiserverlib.cil.WaitObject;
import com.cisco.cse.ctiserverlib.util.Cti_IKeywordIDs;



@RunWith(MockitoJUnitRunner.class)
public class SessionManagerTest {
	
	@Mock
	private CtiSession ctiSession;
	
	@Mock
	private SessionMessageHandler sessionMessageHandler;
	
	private SessionManager sessionManager;
	
	private Session session;
	
	@Before
	public void setUp() throws Exception  {
		
		sessionManager = PowerMockito.spy(new SessionManager());
		sessionManager.setCtiSession(ctiSession);
		sessionManager.setSessionMessageHandler(sessionMessageHandler);
		session = Mockito.mock(Session.class);
	}
	
	
	/**
	 * Initializations are setting to NULL
	 */
	@After
	public void tearDown() throws Exception {
		session.close();
		session = null;
		ctiSession.Disconnect(new Arguments());
		ctiSession = null;
		sessionManager = null;
	}
	
	
	
	@Test
	public void testLoginAliasNotFound() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("marctest", "agent.5000.403466");
		agentAliasMap.put("test1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		Map<String, Object> response = sessionManager.login("OE0IPF", "19911050027", session, false);

		assertEquals(response.get("statusCode"), 2);
	}
	
	
	@Test
	public void testLoginAgentLoggedIn() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("marctest", "agent.5000.403466");
		agentAliasMap.put("test1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		agentAliasMap.put("OE0IPF", "agent.5000.47483711");
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "19911050027");
		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.47483711");
		doReturn(2).when(agent).GetAgentState();
		doReturn("47483711").when(agent).GetValueString(367);
		
		Map<String, Set<Session>> agentSocketSessionMap = new HashMap<String, Set<Session>>();
		
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setSession(session);
		agentSessionInfo.setActive(false);

		Set<Session> listOfAgentSessionInfo = new HashSet<Session>();
		listOfAgentSessionInfo.add(session);
		
		agentSocketSessionMap.put("47483711", listOfAgentSessionInfo);
		sessionManager.setAgentsSocketSessions(agentSocketSessionMap);
		
		Map<String, Arguments> map = new HashMap<String, Arguments>();
		map.put("agent.5000.403466", new Arguments());
		sessionManager.setM_CallList(map);
		
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		cilRefArg.SetValue(agent);
		doReturn("10").when(session).getId();
		Arguments newArgs = PowerMockito.spy(new Arguments());
		newArgs.SetValue(cilRefArg);
		
		doReturn(0).when(agent).GetValueIntObj(229);
		doReturn(0).when(agent).GetValueIntObj(230);
		doReturn(true).when(agent).GetValueBoolObj(589);
		doReturn(true).when(agent).GetValueBoolObj(590);
		
		doReturn(1).when(agent).Login((Arguments) anyObject());
		
		Map<String, Object> response = sessionManager.login("OE0IPF", "19911050027", session, false);
		assertEquals(1, response.get("statusCode"));
	}
	 
	
	@Test
	public void testLoginAgentState4SessionOpen() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("marctest", "agent.5000.403466");
		agentAliasMap.put("test1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		agentAliasMap.put("OE0IPF", "agent.5000.47483711");
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTID, "403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "19911050027");
		doReturn(agent).when(sessionManager).getAgentByUID(anyString());
		doReturn(2).when(agent).GetAgentState();
/*		
		Map<String, AgentSessionInfo> agentSocketSessionMap = new HashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		agentSocketSessionMap.put("403466", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(agentSocketSessionMap);
*/		
		createAgentSession(true);
		doReturn(true).when(session).isOpen();
		doReturn("10").when(session).getId();
		doReturn(0).when(agent).GetValueIntObj(229);
		doReturn(0).when(agent).GetValueIntObj(230);
		doReturn(true).when(agent).GetValueBoolObj(589);
		doReturn(true).when(agent).GetValueBoolObj(590);
		
		Map<String, Object> response = sessionManager.login("OE0IPF", "19911050027", session, false);
		assertEquals(1, response.get("statusCode"));
	}
	
	@Test
	public void testLoginAgentWithTalkingState() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("marctest", "agent.5000.403466");
		agentAliasMap.put("test1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		agentAliasMap.put("OE0IPF", "agent.5000.47483711");
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTID, "403466");
		doReturn(agent).when(sessionManager).getAgentByUID(anyString());
		doReturn(4).when(agent).GetAgentState();
/*		
		Map<String, AgentSessionInfo> agentSocketSessionMap = new HashMap<String, AgentSessionInfo>();
		sessionManager.setAgentsSocketSessions(agentSocketSessionMap);
*/		
		createAgentSession(true);
		doReturn("10").when(session).getId();
		doReturn(0).when(agent).GetValueIntObj(229);
		doReturn(0).when(agent).GetValueIntObj(230);
		doReturn(true).when(agent).GetValueBoolObj(589);
		doReturn(true).when(agent).GetValueBoolObj(590);
		doReturn("19911050027").when(agent).GetValueString(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT);
		doReturn(1).when(agent).Login((Arguments) anyObject());
		
		Call call = PowerMockito.spy(new Call());
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.403466", args);
		sessionManager.setM_CallList(callList);
		doReturn(1).when(args).NumElements();	
		doReturn(cilRefArg).when(args).GetElement(1);
		doReturn(call).when(cilRefArg).GetValue();
		Map<String, Object> response = sessionManager.login("OE0IPF", "19911050027", session, false);
		assertEquals(1, response.get("statusCode"));
	}
	
	
	@Test
	public void testLoginAgentStateSessionNull() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("marctest", "agent.5000.403466");
		agentAliasMap.put("test1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		agentAliasMap.put("OE0IPF", "agent.5000.47483711");
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		doReturn("10").when(session).getId();
		
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTID, "403466");
		doReturn(agent).when(sessionManager).getAgentByUID(anyString());
		doReturn(2).when(agent).GetAgentState();
/*		
		Map<String, AgentSessionInfo> agentSocketSessionMap = new HashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		agentSocketSessionMap.put("47483711", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(agentSocketSessionMap);
*/		
		createAgentSession(true);
		doReturn(0).when(agent).GetValueIntObj(229);
		doReturn(0).when(agent).GetValueIntObj(230);
		doReturn(true).when(agent).GetValueBoolObj(589);
		doReturn(true).when(agent).GetValueBoolObj(590);
		doReturn(1).when(agent).Login((Arguments) anyObject());
		
		Map<String, Object> response = sessionManager.login("OE0IPF", "19911050027", session, false);
		assertEquals(response.get("statusCode"), 1);
	}
	
	
	
	@Test
	public void testMakeAgentNotReadyAgentStateNot3() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent("403466");
		doReturn(2).when(agent).GetAgentState();
		doReturn("agent.5000.403466").when(agent).GetValueString(anyString());
		
		sessionManager.makeAgentNotReady("403466", session);
	}
	
	
	@Test
	public void testMakeAgentNotReadyAgentState3() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent("403466");
		doReturn(3).when(agent).GetAgentState();
		doReturn("agent.5000.403466").when(agent).GetValueString(469);
		
		sessionManager.makeAgentNotReady("403466", session);
	}
	
	@Test
	public void testLoginAgentNotLoggedIn() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("marctest", "agent.5000.403466");
		agentAliasMap.put("test1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		agentAliasMap.put("OE0IPF", "agent.5000.47483711");
		sessionManager.setAgentAliasMap(agentAliasMap);
		doReturn("10").when(session).getId();
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.47483711");
		doReturn(1).when(agent).GetAgentState();
		doReturn("47483711").when(agent).GetValueString(367);
/*		
		Map<String, AgentSessionInfo> agentSocketSessionMap = new HashMap<String, AgentSessionInfo>();
		sessionManager.setAgentsSocketSessions(agentSocketSessionMap);
*/		
		createAgentSession(true);
		sessionManager.setConnectedServerName("test");
		
		doReturn(1).when(agent).Login((Arguments) anyObject());
		doReturn("47483711").when(agent).GetValueString(367);
		doReturn("fname").when(agent).GetValueString(369);
		doReturn("lname").when(agent).GetValueString(368);
//		doReturn(true).when(agent).IsSupervisor();
//		SFAgent sfAgent = PowerMockito.spy(new SFAgent());
//		PowerMockito.whenNew(SFAgent.class).withNoArguments().thenReturn(sfAgent);
//		PowerMockito.doNothing().when(sfAgent).wait(10000);
		
		Map<String, Object> response = sessionManager.login("OE0IPF", "19911050027", session, true);
		assertEquals(response.get("statusCode"), 1);
	}
	
	
	
	@Test(expected = RuntimeException.class)
	public void testLoginAgentNotLoggedInException() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("marctest", "agent.5000.403466");
		agentAliasMap.put("test1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		agentAliasMap.put("OE0IPF", "agent.5000.47483711");
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.47483711");
		doReturn(1).when(agent).GetAgentState();
		doReturn("47483711").when(agent).GetValueString(367);
/*		
		Map<String, AgentSessionInfo> agentSocketSessionMap = new HashMap<String, AgentSessionInfo>();
		sessionManager.setAgentsSocketSessions(agentSocketSessionMap);
*/		
		createAgentSession(true);
		sessionManager.setConnectedServerName("test");
		doThrow(new RuntimeException("An exception occurred while logging in the agent")).when(agent).Login((Arguments) anyObject());
		Map<String, Object> response = sessionManager.login("OE0IPF", "19911050027", session, false);
		assertEquals(response.get("statusCode"), 0);
	}
	
	
	@Test
	public void testLoginAgentNotInSessionMap() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("marctest", "agent.5000.403466");
		agentAliasMap.put("test1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		agentAliasMap.put("OE0IPF", "agent.5000.47483711");
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.47483711");
		doReturn(2).when(agent).GetAgentState();
		doReturn("47483711").when(agent).GetValueString(367);
/*		
		Map<String, AgentSessionInfo> agentSocketSessionMap = new HashMap<String, AgentSessionInfo>();
		sessionManager.setAgentsSocketSessions(agentSocketSessionMap);
*/		
		createAgentSession(true);
		sessionManager.setConnectedServerName("test");
		doReturn("10").when(session).getId();
		doReturn(1).when(agent).SetAgentState((Arguments) anyObject());
		doReturn("47483711").when(agent).GetValueString(367);
		doReturn("fname").when(agent).GetValueString(369);
		doReturn("lname").when(agent).GetValueString(368);
		doReturn(0).when(agent).GetValueIntObj(229);
		doReturn(0).when(agent).GetValueIntObj(230);
		doReturn(true).when(agent).GetValueBoolObj(589);
		doReturn(true).when(agent).GetValueBoolObj(590);
		
		Map<String, Object> response = sessionManager.login("OE0IPF", "19911050027", session, false);
		assertEquals(response.get("statusCode"), 1);
	}
	
	
	@Test
	public void testReady() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent(anyString());
		doReturn(1).when(sessionManager).changeAgentState(agent, "19911050027", 3, null);
		Map<String, Object> response = sessionManager.ready("47483711", "19911050027", session);
		
		assertEquals(response.get("action"), "ready");
	}
	
	
	@Test
	public void testNotReady() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent(anyString());
		doReturn(1).when(sessionManager).changeAgentState(agent, "19911050027", 2, "1");
		Map<String, Object> response = sessionManager.notReady("47483711", "19911050027", "", session);
		
		assertEquals(response.get("action"), "notReady");		
	}
	
	
	@Test
	public void testLogout() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent(anyString());
		doReturn(1).when(sessionManager).changeAgentState(agent, "1", "19911050027");
		Map<String, Object> response = sessionManager.logout("47483711", "19911050027", "1", session);
		
		assertEquals(response.get("action"), "logout");		
	}
	
	
	@Test
	public void testSupervisorLogout() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent(anyString());
		doReturn(1).when(sessionManager).changeAgentState(agent, "1", "19911050027");
		
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("marctest", "agent.5000.403466");
		agentAliasMap.put("test1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		Map<String, Object> response = sessionManager.supervisorLogout("OE034T", "19911050027", "1", session);
		
		assertEquals(response.get("action"), "supervisorlogout");		
	}
	
	@Test
	public void testGetAllAgentNotNullMap() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("marctest", "agent.5000.403466");
		agentAliasMap.put("test1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(args).when(ctiSession).GetAllAgents();
		
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		assertTrue(!agentAliasMap.isEmpty());
	}
	
	
	@Test
	public void testOnEventeOnConnection() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("test").when(args).GetValueString(517);
		sessionManager.setAgentsSocketSessions(null);
		sessionManager.OnEvent(536870913, args);
	}
	
	
	@Test
	public void testOnConnectionPositive() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("WTSDZ41W.opr.system.test.statefarm.org").when(args).GetValueString(517);
		doReturn("Properties").when(ctiSession).DumpProperties();
/*		
		Map<String, AgentSessionInfo> socketSessionMap = new HashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		socketSessionMap.put("403466", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(socketSessionMap);
*/		
		createAgentSession(true);
		doReturn(1).when(args).NumElements();
		doReturn("PGStatus").when(args).GetElementKey(1);
		doReturn("4").when(args).GetValueString(1);
		doReturn(true).when(session).isOpen();
		doNothing().when(sessionMessageHandler).sendMessageToClient((Session) anyObject(), anyString());
		
		sessionManager.OnEvent(536870913, args);
	}
	
	
	@Test
	public void testOnEventeOnConnectionClosed() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(0).when(ctiSession).Disconnect(args);
		sessionManager.OnEvent(536870914, args);
	}
	
	
	@Test(expected=RuntimeException.class)
	public void testOnEventeOnConnectionFailure() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		sessionManager.OnEvent(536870916, args);
	}
	
	@Test(expected = RuntimeException.class)
	public void testOnEventeOnCtiFailurePositive() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(true).when(args).IsValid(555);
		sessionManager.OnEvent(536870918, args);
	}
	
	
	@Test(expected = RuntimeException.class)
	public void testOnEventeOnCtiFailureNegative() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(true).when(args).IsValid(556);
		sessionManager.OnEvent(536870918, args);
	}
	
	
	@Test
	public void testGetCallArguments() throws Exception {
		Map<String, Arguments> map = new HashMap<String, Arguments>();
		Arguments args = PowerMockito.spy(new Arguments());
		map.put("47483711", args);
		sessionManager.setM_CallList(map);
	}
	
	
	/** onAgentStateChangeEvent **/
	@Test
	public void testOnEventeAgentStateEventFalseSessionConnected() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(0).when(args).GetValueIntObj(10);
		sessionManager.setbSessionConnected(false);
		
		sessionManager.OnEvent(30, args);
	}
	
	
	@Test
	public void testOnEventeAgentStateEventAgentStateNotLogout() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(1).when(args).NumElements();
		doReturn(0).when(args).GetValueIntObj(10);
		sessionManager.setbSessionConnected(true);
		doReturn(true).when(session).isOpen();
		createAgentSession(true);
		doReturn(0).when(args).GetValueIntObj(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn("agent.5000.403466").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
	
		mockUserResponse();
		
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT);
		
		doReturn("2").when(args).GetValueString(Constants.CTI_AGENT_STATE);
		sessionManager.OnEvent(30, args);
		
		assertTrue(!sessionManager.getAgentDeviceMap().isEmpty());
	}
	
	@Test
	public void testOnEventeAgentStateEventForInactive() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(0).when(args).GetValueIntObj(10);
		sessionManager.setbSessionConnected(true);
		doReturn(false).when(session).isOpen();
		createAgentSession(false);
		doReturn(0).when(args).GetValueIntObj(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn("agent.5000.403466").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
	
		mockUserResponse();
		
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT);
		
		doReturn("5").when(args).GetValueString(Constants.CTI_AGENT_STATE);
		sessionManager.OnEvent(30, args);
		
		assertTrue(!sessionManager.getAgentDeviceMap().isEmpty());
	}
	
	
	@Test
	public void testOnEventeAgentStateEventInterruptedException() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(0).when(args).GetValueIntObj(10);
		sessionManager.setbSessionConnected(true);
		createAgentSession(true);
		doReturn(0).when(args).GetValueIntObj(469);
		doReturn("agent.5000.403466").when(args).GetValueString(469);
	
		doReturn(3).when(args).GetValueIntObj("AgentState");
		doReturn(3).when(args).GetValueIntObj(57);
		
		mockUserResponseAndThrowInterruptedEx();
		
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("403466").when(agent).GetValueString(370);
		
		doReturn("1").when(args).GetValueString("AgentState");
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("403466", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.403466", args);
		
		sessionManager.setM_CallList(callList);
		doReturn(true).when(session).isOpen();
		sessionManager.OnEvent(30, args);
		assertTrue(!agentDeviceMap.isEmpty());
	}
	

	@Test
	public void testOnEventeAgentStateEventExecutionException() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(0).when(args).GetValueIntObj(10);
		sessionManager.setbSessionConnected(true);
		createAgentSession(true);
		doReturn(0).when(args).GetValueIntObj(469);
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn(3).when(args).GetValueIntObj("AgentState");
		doReturn(3).when(args).GetValueIntObj(57);
		
		mockUserResponseAndThrowExecutionEx();
		
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("403466").when(agent).GetValueString(370);
		
		doReturn("1").when(args).GetValueString("AgentState");
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("403466", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.403466", args);
		
		sessionManager.setM_CallList(callList);
		doReturn(true).when(session).isOpen();
		sessionManager.OnEvent(30, args);
		assertTrue(!agentDeviceMap.isEmpty());
	}
	
	
	@Test
	public void testOnEventeAgentStateEventTimeoutException() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(0).when(args).GetValueIntObj(10);
		sessionManager.setbSessionConnected(true);
		createAgentSession(true);
		doReturn(0).when(args).GetValueIntObj(469);
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn(3).when(args).GetValueIntObj("AgentState");
		doReturn(3).when(args).GetValueIntObj(57);
		
		mockUserResponseAndThrowTimeoutEx();
		
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("403466").when(agent).GetValueString(370);
		
		doReturn("1").when(args).GetValueString("AgentState");
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("403466", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.403466", args);
		
		sessionManager.setM_CallList(callList);
		doReturn(true).when(session).isOpen();
		sessionManager.OnEvent(30, args);
		assertTrue(!agentDeviceMap.isEmpty());
	}
	
	
	@Test
	public void testUpdateAgentStateWhenagentInactive() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(0).when(args).GetValueIntObj(10);
		sessionManager.setbSessionConnected(true);
		createAgentSession(true);
		doReturn(0).when(args).GetValueIntObj(469);
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn(3).when(args).GetValueIntObj("AgentState");
		doReturn(3).when(args).GetValueIntObj(57);
		
		mockUserResponseAndThrowTimeoutEx();
		
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("403466").when(agent).GetValueString(370);
		
		doReturn("3").when(args).GetValueString("AgentState");
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("403466", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.403466", args);
		
		sessionManager.setM_CallList(callList);
		doReturn(false).when(session).isOpen();
		sessionManager.OnEvent(30, args);
		assertTrue(!agentDeviceMap.isEmpty());
	}
	
	/** end onAgentStateChangeEvent **/
	
	
	@Test
	public void testOnEventeOnMonitorModeEstablished() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		sessionManager.OnEvent(536870921 , args);
	}
	
	
	
	@Test
	public void testOnEventDefault() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		sessionManager.OnEvent(13289898, args);
	}
	
	
	/** OnAgentDeskSettingsConf **/
	
	
	@Test
	public void testOnAgentDeskSettingsConfNoAgentSession() throws Exception {
/*		Map<String, AgentSessionInfo> agentSocketSessionMap = new HashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSocketSessionMap.put("403467", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(agentSocketSessionMap);
*/		
		createAgentSession(true);
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(1).when(args).NumElements();
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(true).when(session).isOpen();
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		
		mockUserResponse();
		
		sessionManager.OnEvent(132, args);
	}
	
	
	@Test
	public void testOnAgentDeskSettingsConfNullSessionMap() throws Exception {
		sessionManager.setAgentsSocketSessions(null);
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(true).when(session).isOpen();
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		mockUserResponse();
		
		sessionManager.OnEvent(132, args);
	}
	
	
	
	@Test
	public void testOnAgentDeskSettingsConfPositive() throws Exception {
		createAgentSession(true);
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(true).when(session).isOpen();
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		
		mockUserResponse();
		
		sessionManager.OnEvent(132, args);
	}
	
	
	@Test
	public void testOnAgentDeskSettingsConfNullSession() throws Exception {
/*		Map<String, AgentSessionInfo> agentSocketSessionsMap = new ConcurrentHashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(null);
		agentSocketSessionsMap.put("403280", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(agentSocketSessionsMap);
*/		
		createAgentSession(true);
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.403466");
		doReturn("Agent properties").when(agent).DumpProperties();
		doReturn(true).when(agent).IsValid(589);
		doReturn(new Integer(0)).when(args).GetValueIntObj(229);
		doReturn(new Integer(0)).when(args).GetValueIntObj(230);
		doReturn(true).when(agent).GetValueBoolObj(589);
		doReturn(true).when(agent).GetValueBoolObj(590);
		
		sessionManager.OnEvent(132, args);
	}
	
	@Test
	public void testOnAgentDeskSettingsConfSessionNotOpen() throws Exception {
/*		
		Map<String, AgentSessionInfo> agentSocketSessionsMap = new ConcurrentHashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		agentSocketSessionsMap.put("403280", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(agentSocketSessionsMap);
*/		
		createAgentSession(true);
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(false).when(session).isOpen();
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.403466");
		doReturn("Agent properties").when(agent).DumpProperties();
		doReturn(true).when(agent).IsValid(589);
		doReturn(new Integer(0)).when(args).GetValueIntObj(229);
		doReturn(new Integer(0)).when(args).GetValueIntObj(230);
		doReturn(true).when(agent).GetValueBoolObj(589);
		doReturn(true).when(agent).GetValueBoolObj(590);
		
		sessionManager.OnEvent(132, args);
	}
	
	
	@Test
	public void testOnAgentDeskSettingsConfInterruptedException() throws Exception {
/*		
		Map<String, AgentSessionInfo> agentSocketSessionsMap = new ConcurrentHashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		agentSocketSessionsMap.put("403280", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(agentSocketSessionsMap);
*/		
		createAgentSession(true);
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(true).when(session).isOpen();
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.403466");
		doReturn("Agent properties").when(agent).DumpProperties();
		doReturn(true).when(agent).IsValid(589);

		doReturn(new Integer(0)).when(args).GetValueIntObj(229);
		doReturn(new Integer(0)).when(args).GetValueIntObj(230);
		doReturn(true).when(agent).GetValueBoolObj(589);
		doReturn(true).when(agent).GetValueBoolObj(590);
		
		mockUserResponseAndThrowInterruptedEx();
		
		sessionManager.OnEvent(132, args);
	}
	
	
	@Test
	public void testOnAgentDeskSettingsConfExecutionException() throws Exception {
/*
		Map<String, AgentSessionInfo> agentSocketSessionsMap = new ConcurrentHashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		agentSocketSessionsMap.put("403466", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(agentSocketSessionsMap);
*/		
		createAgentSession(true);
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(true).when(session).isOpen();
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.403466");
		doReturn("Agent properties").when(agent).DumpProperties();
		doReturn(true).when(agent).IsValid(589);

		doReturn(new Integer(0)).when(args).GetValueIntObj(229);
		doReturn(new Integer(0)).when(args).GetValueIntObj(230);
		doReturn(true).when(agent).GetValueBoolObj(589);
		doReturn(true).when(agent).GetValueBoolObj(590);
		
		mockUserResponseAndThrowExecutionEx();
		
		sessionManager.OnEvent(132, args);
	}
	
	
	@Test
	public void testOnAgentDeskSettingsConfTimeoutException() throws Exception {
/*		Map<String, AgentSessionInfo> agentSocketSessionsMap = new ConcurrentHashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		agentSocketSessionsMap.put("403280", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(agentSocketSessionsMap);
*/
		
		createAgentSession(true);
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn(true).when(session).isOpen();
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.403466");
		doReturn("Agent properties").when(agent).DumpProperties();
		doReturn(true).when(agent).IsValid(589);

		doReturn(new Integer(0)).when(args).GetValueIntObj(229);
		doReturn(new Integer(0)).when(args).GetValueIntObj(230);
		doReturn(true).when(agent).GetValueBoolObj(589);
		doReturn(true).when(agent).GetValueBoolObj(590);
		mockUserResponseAndThrowTimeoutEx();
		
		sessionManager.OnEvent(132, args);
	}
	
	
	/** eControlFailureEvent **/
	
	
	@Test
	public void testOnEventeControlFailureConf() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("agent.5000.403280").when(args).GetValueString(469);
		sessionManager.OnEvent(35, args);
	}
	
	
	@Test
	public void testOnControlFailureEventForAgent() throws Exception {
		createAgentSession(true);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(1).when(agent).GetAgentState();
		doReturn(true).when(session).isOpen();
		
		mockUserResponse();
		sessionManager.OnEvent(35, args);
	}
	
	
	@Test
	public void testOnControlFailureEventForAgentInterruptedException() throws Exception {
		createAgentSession(true);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(1).when(agent).GetAgentState();
		doReturn(true).when(session).isOpen();

		mockUserResponseAndThrowInterruptedEx();
		sessionManager.OnEvent(35, args);
	}
	
	
	@Test
	public void testOnControlFailureEventForAgentExecutionException() throws Exception {
		createAgentSession(true);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(1).when(agent).GetAgentState();
		doReturn(true).when(session).isOpen();
		
		mockUserResponseAndThrowExecutionEx();
		sessionManager.OnEvent(35, args);
	}
	
	
	@Test
	public void testOnControlFailureEventForAgentTimeoutException() throws Exception {
		createAgentSession(true);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(1).when(agent).GetAgentState();
		doReturn(true).when(session).isOpen();
		
		mockUserResponseAndThrowTimeoutEx();
		sessionManager.OnEvent(35, args);
	}
	
	
	@SuppressWarnings("unchecked")
	@Test
	public void testOnControlFailureEventForAgentException() throws Exception {
		createAgentSession(true);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(1).when(agent).GetAgentState();
		doReturn(true).when(session).isOpen();
		
		Async async = Mockito.mock(Async.class);
		Future<Void> future = Mockito.mock(Future.class);
		doReturn(async).when(session).getAsyncRemote();
		doReturn(future).when(async).sendText(anyString());
		doThrow(new RuntimeException("Failed to send message")).when(future).get(300, TimeUnit.MILLISECONDS);
		
		sessionManager.OnEvent(35, args);
	}
	
	@Test
	public void testOnControlFailureEventForCall() throws Exception {

		createAgentSession(true);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19911050027").when(args).GetValueString(469);
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn("19911050027").when(agent).GetValueString(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT);
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(1).when(agent).GetAgentState();
		doReturn(true).when(session).isOpen();
		
		mockUserResponse();
		sessionManager.OnEvent(35, args);
	}
	
	@Test
	public void testOnControlFailureEventNoSession() throws Exception {

		createAgentSession(true);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn("403466").when(sessionManager).getAgentId(args);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(1).when(agent).GetAgentState();
		doReturn(false).when(session).isOpen();
		
		sessionManager.OnEvent(35, args);
	}
	
	
	@Test
	public void testGetAgentId() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("agent.5000.403440").when(args).GetValueString(469);
		String agentId = sessionManager.getAgentId(args);
		
		assertEquals(agentId, "403440");
	}
	
	
	@Test
	public void testGetAgentByUID() throws Exception {
		Agent agentMock = PowerMockito.spy(new Agent());
		doReturn(agentMock).when(ctiSession).GetObjectFromObjectID("403440");
		Agent agent = sessionManager.getAgentByUID("403440");
		
		assertEquals(agent, agentMock);
	}
	
	
	@Test
	public void testChangeAgentStateLogout() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(0).when(agent).Logout((Arguments) anyObject());
		
		int statusCode = sessionManager.changeAgentState(agent, "", "");
		assertEquals(0, statusCode);
	}
	
	@Test
	public void testSupervisorChangeAgentStateLogout() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(0).when(agent).Logout((Arguments) anyObject());
		
		int statusCode = sessionManager.supervisorLogout(agent, "", "");
		assertEquals(0, statusCode);
	}
	
	
	@Test
	public void testChangeAgentStateLogoutNotBlankRC() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		Arguments args = PowerMockito.spy(new Arguments());
		PowerMockito.whenNew(Arguments.class).withNoArguments().thenReturn(args);
		doReturn(0).when(agent).Logout((Arguments) anyObject());
		
		int statusCode = sessionManager.changeAgentState(agent, "10", "");
		assertEquals(0, statusCode);
	}
	
	@Test
	public void testSupervisorChangeAgentStateLogoutNotBlankRC() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		Arguments args = PowerMockito.spy(new Arguments());
		PowerMockito.whenNew(Arguments.class).withNoArguments().thenReturn(args);
		doReturn(0).when(agent).Logout((Arguments) anyObject());
		
		int statusCode = sessionManager.supervisorLogout(agent, "10", "");
		assertEquals(0, statusCode);
	}
	
	
	@Test
	public void testSupervisorChangeAgentStateLogoutAgentState2() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		Arguments args = PowerMockito.spy(new Arguments());
		PowerMockito.whenNew(Arguments.class).withNoArguments().thenReturn(args);
		doReturn(2).when(agent).GetAgentState();
		doReturn(0).when(agent).Logout((Arguments) anyObject());
		
		int statusCode = sessionManager.supervisorLogout(agent, "10", "");
		assertEquals(0, statusCode);
	}
	
	
	@Test
	public void testSupervisorChangeAgentStateLogoutAgentState0() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		Arguments args = PowerMockito.spy(new Arguments());
		PowerMockito.whenNew(Arguments.class).withNoArguments().thenReturn(args);
		doReturn(0).when(agent).GetAgentState();
		doReturn(0).when(agent).Logout((Arguments) anyObject());
		
		int statusCode = sessionManager.supervisorLogout(agent, "10", "");
		assertEquals(0, statusCode);
	}
	
	
	@Test
	public void  testChangeAgentStateReady() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(0).when(agent).SetAgentState((Arguments) anyObject());
		
		int statusCode = sessionManager.changeAgentState(agent, "", 0, null);
		assertEquals(0, statusCode);
	}
	
	
	@Test
	public void  testChangeAgentStateNotReady() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(0).when(agent).SetAgentState((Arguments) anyObject());
		
		int statusCode = sessionManager.changeAgentState(agent, "", 0, "1");
		assertEquals(0, statusCode);
	}
	
	
	
	@Test
	public void testGetAgent() throws Exception {
		Agent agentMock = PowerMockito.spy(new Agent());
		doReturn(agentMock).when(ctiSession).GetObjectFromObjectID(anyString());
		
		Agent agent = sessionManager.getAgent("403440");
		assertEquals(agentMock, agent);
	}
	
	
	@Test
	public void testAnswerWithCallListEmpty() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent(anyString());
		Map<String, Object> response = sessionManager.answer("47483711", session);
		
		assertEquals(response.get("action"), "answer");
	}
	
	

	@Test
	public void testAnswerWithCallStatusAlert() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		Arguments args = PowerMockito.spy(new Arguments());
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		Call call = PowerMockito.spy(new Call());
		cilRefArg.SetValue(call);
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		args.SetValue(cilRefArg);
		doReturn(1).when(args).NumElements();
		doReturn(cilRefArg).when(args).GetElement(1);
		doReturn(args).when(sessionManager).getCallArguments("agent.5000.403466");
		doReturn(agent).when(sessionManager).getAgent(anyString());
		doReturn(Short.valueOf("2")).when(call).GetValueShortObj("CallStatus");
		Map<String, Object> response = sessionManager.answer("47483711", session);
		assertEquals(response.get("action"), "answer");
	}
	
	@Test
	public void testAnswerWithCallStatusOther() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		Arguments args = PowerMockito.spy(new Arguments());
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		Call call = PowerMockito.spy(new Call());
		cilRefArg.SetValue(call);
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		args.SetValue(cilRefArg);
		doReturn(1).when(args).NumElements();
		doReturn(cilRefArg).when(args).GetElement(1);
		doReturn(args).when(sessionManager).getCallArguments("agent.5000.403466");
		doReturn(agent).when(sessionManager).getAgent(anyString());
		doReturn(Short.valueOf("3")).when(call).GetValueShortObj("CallStatus");
		Map<String, Object> response = sessionManager.answer("47483711", session);
		assertEquals(response.get("action"), "answer");
	}
	
	@Test
	public void testHoldWithCallStatusConnect() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		Arguments args = PowerMockito.spy(new Arguments());
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		Call call = PowerMockito.spy(new Call());
		cilRefArg.SetValue(call);
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		args.SetValue(cilRefArg);
		doReturn(1).when(args).NumElements();
		doReturn(cilRefArg).when(args).GetElement(1);
		doReturn(args).when(sessionManager).getCallArguments("agent.5000.403466");
		doReturn(agent).when(sessionManager).getAgent(anyString());
		doReturn(Short.valueOf("3")).when(call).GetValueShortObj("CallStatus");
		Map<String, Object> response = sessionManager.hold("47483711", "19911050027", session);
		assertEquals(response.get("action"), "hold");
	}
	
	@Test
	public void testHoldWithCallStatusOther() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		Arguments args = PowerMockito.spy(new Arguments());
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		Call call = PowerMockito.spy(new Call());
		cilRefArg.SetValue(call);
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		args.SetValue(cilRefArg);
		doReturn(1).when(args).NumElements();
		doReturn(cilRefArg).when(args).GetElement(1);
		doReturn(args).when(sessionManager).getCallArguments("agent.5000.403466");
		doReturn(agent).when(sessionManager).getAgent(anyString());
		doReturn(Short.valueOf("0")).when(call).GetValueShortObj("CallStatus");
		Map<String, Object> response = sessionManager.hold("47483711", "19911050027", session);
		assertEquals(response.get("action"), "hold");
	}
	
	@Test
	public void testResumeWithCallStatusHold() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		Arguments args = PowerMockito.spy(new Arguments());
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		Call call = PowerMockito.spy(new Call());
		cilRefArg.SetValue(call);
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		args.SetValue(cilRefArg);
		doReturn(1).when(args).NumElements();
		doReturn(cilRefArg).when(args).GetElement(1);
		doReturn(args).when(sessionManager).getCallArguments("agent.5000.403466");
		doReturn(agent).when(sessionManager).getAgent(anyString());
		doReturn(Short.valueOf("4")).when(call).GetValueShortObj("CallStatus");
		Map<String, Object> response = sessionManager.resume("47483711", "19911050027", session);
		assertEquals(response.get("action"), "resume");
	}
	
	@Test
	public void testResumeWithCallStatusOther() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		Arguments args = PowerMockito.spy(new Arguments());
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		Call call = PowerMockito.spy(new Call());
		cilRefArg.SetValue(call);
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		args.SetValue(cilRefArg);
		doReturn(1).when(args).NumElements();
		doReturn(cilRefArg).when(args).GetElement(1);
		doReturn(args).when(sessionManager).getCallArguments("agent.5000.403466");
		doReturn(agent).when(sessionManager).getAgent(anyString());
		doReturn(Short.valueOf("2")).when(call).GetValueShortObj("CallStatus");
		Map<String, Object> response = sessionManager.resume("47483711", "19911050027", session);
		assertEquals(response.get("action"), "resume");
	}
	
	@Test
	public void testHangupWithCallStatusConnect() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		Arguments args = PowerMockito.spy(new Arguments());
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		Call call = PowerMockito.spy(new Call());
		cilRefArg.SetValue(call);
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		args.SetValue(cilRefArg);
		doReturn(1).when(args).NumElements();
		doReturn(cilRefArg).when(args).GetElement(1);
		doReturn(args).when(sessionManager).getCallArguments("agent.5000.403466");
		doReturn(agent).when(sessionManager).getAgent(anyString());
		doReturn(call).when(cilRefArg).GetValue();
		doReturn(Short.valueOf("3")).when(call).GetValueShortObj(473);
		Map<String, Object> response = sessionManager.hangup("47483711", session);
		assertEquals(response.get("action"), "hangup");
	}
	
	@Test
	public void testHangupWithCallStatusOther() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		Arguments args = PowerMockito.spy(new Arguments());
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		Call call = PowerMockito.spy(new Call());
		cilRefArg.SetValue(call);
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		args.SetValue(cilRefArg);
		doReturn(1).when(args).NumElements();
		doReturn(cilRefArg).when(args).GetElement(1);
		doReturn(args).when(sessionManager).getCallArguments("agent.5000.403466");
		doReturn(agent).when(sessionManager).getAgent(anyString());
		doReturn(call).when(cilRefArg).GetValue();
		doReturn(Short.valueOf("0")).when(call).GetValueShortObj(473);
		Map<String, Object> response = sessionManager.hangup("47483711", session);
		assertEquals(response.get("action"), "hangup");
	}
	
	
	
	@Test
	public void testOnCallDeliveredEventCallObjectNull() throws Exception {
		testOnAgentInfoEventCallObjectNull(9);
	}
	
	@Test
	public void testOnCallEstablishedEventCallObjectNull() throws Exception {
		testOnAgentInfoEventCallObjectNull(10);
	}
	
	@Test
	public void testOnCallHeldEventCallObjectNull() throws Exception {
		testOnAgentInfoEventCallObjectNull(11);
	}
	
	@Test
	public void testOnCallRetrievedEventCallObjectNull() throws Exception {
		testOnAgentInfoEventCallObjectNull(12);
	}
	
	@Test
	public void testOnCallConnectionClearedEventCallObjectNull() throws Exception {
		testOnAgentInfoEventCallObjectNull(14);
	}

	
	@Test
	public void testOnCallClearedEventCallObjectNull() throws Exception {
		testOnAgentInfoEventCallObjectNull(13);
	}
	
	
	private void testOnAgentInfoEventCallObjectNull(int iEventID) {
		sessionManager.setbSessionConnected(true);
		Arguments args = PowerMockito.spy(new Arguments());
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "call.5000.42365369.19172002189");
		doReturn("call.5000.42365369.19172002189").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		sessionManager.OnEvent(iEventID, args);
	}
	
	
	@Test
	public void testCheckCallList() throws Exception {
		sessionManager.setbSessionConnected(true);
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(null).when(args).GetValueString(469);
		sessionManager.OnEvent(13, args);
	}
	
	@Test
	public void testCallFailedEvent() throws Exception {
		sessionManager.setbSessionConnected(true);
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(null).when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		sessionManager.OnEvent(16, args);
	}
	
	@Test
	public void testCallServiceInitiatedEvent() throws Exception {
		sessionManager.setbSessionConnected(true);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19911050027");
		doReturn(2).when(call).GetValueIntObj(14);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn("agent.5000.403466").when(agent).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		
		Map<String, Arguments> map = new HashMap<String, Arguments>();
		map.put("agent.5000.403466", args);
		sessionManager.setM_CallList(map);
		
		doReturn("agent.5000.403466").when(agent).GetValueString(Constants.UNIQUE_OBJECT_ID);
		doReturn("agent.5000.403466").when(agent).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn(true).when(session).isOpen();
		mockUserResponse();
		
		sessionManager.OnEvent(20, args);
	}
		
	@Test
	public void testCallTransferredEvent() throws Exception {
		sessionManager.setbSessionConnected(true);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19911050027");
		doReturn(2).when(call).GetValueIntObj(14);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn("agent.5000.403466").when(agent).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		
		Map<String, Arguments> map = new HashMap<String, Arguments>();
		map.put("agent.5000.403466", null);
		sessionManager.setM_CallList(map);
		
		doReturn("agent.5000.403466").when(agent).GetValueString(Constants.UNIQUE_OBJECT_ID);
		doReturn("agent.5000.403466").when(agent).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn(true).when(session).isOpen();
		mockUserResponse();
		
		sessionManager.OnEvent(20, args);
	}
	
	@Test
	public void testOnCallHeldEventInvalidSession() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		sessionManager.OnEvent(11, args);
	}
	
	@Test
	public void testOnCallRetrievedEventInvalidSession() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		sessionManager.OnEvent(12, args);
	}
	
	@Test
	public void testOnCallConnectionClearedEventInvalidSession() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		sessionManager.OnEvent(14, args);
	}
	
	@Test
	public void testOnCallClearedEventInvalidSession() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		sessionManager.OnEvent(13, args);
	}
	
	@Test
	public void testOnCallDeliveredEventInvalidSession() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		sessionManager.OnEvent(9, args);
	}
	
	@Test
	public void testOnCallEstablishedEventInvalidSession() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		sessionManager.OnEvent(10, args);
	}
	
	
	@Test
	public void testClear() throws Exception {
		SessionManager.clear();
	}
	
	@Test
	public void testOnCallDeliveredEventNewCall() throws Exception {
		testOnAgentInfoEventNewCall(9);
	}
	
	@Test
	public void testOnCallEstablishedEventNewCall() throws Exception {
		testOnAgentInfoEventNewCall(10);
	}
	
	@Test
	public void testOnCallHeldEventNewCall() throws Exception {
		testOnAgentInfoEventNewCall(11);
	}
	
	@Test
	public void testOnCallRetrievedEventNewCall() throws Exception {
		testOnAgentInfoEventNewCall(12);
	}
	
	@Test
	public void testOnCallConnectionClearedEventNewCall() throws Exception {
		testOnAgentInfoEventNewCall(14);
	}
	
	@Test
	public void testOnCallClearedEventNewCall() throws Exception {
		testOnAgentInfoEventNewCall(13);
	}
	
	
	@Test
	public void testOnCallTransferredEvent() throws Exception {
		testOnAgentInfoEventNewCall(17);
	}
	
	@Test
	public void testOnCallConferencedEvent() throws Exception {
		testOnAgentInfoEventNewCall(18);
	}
	private void testOnAgentInfoEventNewCall(int iEventID) {
		sessionManager.setbSessionConnected(true);
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "call.5000.42365369.19172002189");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "19172002189");
		Call call = PowerMockito.spy(new Call());
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		cilRefArg.SetValue(agent);
		Map<String, Arguments> map = new HashMap<String, Arguments>();
		Arguments args = PowerMockito.spy(new Arguments());
		args.SetValue(cilRefArg);
		map.put("call.5000.42365369.19172002187", args);
		sessionManager.setM_CallList(map);
		doReturn("call.5000.42365369.19172002189").when(args).GetValueString(469);
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19172002189");
		doReturn(2).when(call).GetValueIntObj(14);
		doReturn(args).when(ctiSession).GetAllAgents();
		doReturn(1).when(args).NumElements();
		doReturn(cilRefArg).when(args).GetElement(1);
		sessionManager.OnEvent(iEventID, args);
	}

	@Test
	public void testOnCallDeliveredEventExstingCall() throws Exception {
		testOnAgentInfoEventExstingCall(9);
	}
	
	@Test
	public void testOnCallEstablishedEventExstingCall() throws Exception {
		testOnAgentInfoEventExstingCall(10);
	}
	
	@Test
	public void testOnCallHeldEventExstingCall() throws Exception {
		testOnAgentInfoEventExstingCall(11);
	}
	
	@Test
	public void testOnCallRetrievedEventExstingCall() throws Exception {
		testOnAgentInfoEventExstingCall(12);
	}
	
	@Test
	public void testOnCallConnectionClearedEventExstingCall() throws Exception {
		testOnAgentInfoEventExstingCall(14);
	}
	
	@Test
	public void testOnCallClearedEventExstingCall() throws Exception {
		testOnAgentInfoEventExstingCall(13);
	}

	private void testOnAgentInfoEventExstingCall(int iEventID) {
		sessionManager.setbSessionConnected(true);
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "call.5000.42365369.19172002189");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "19172002189");
		Call call = PowerMockito.spy(new Call());
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		cilRefArg.SetValue(agent);
		Map<String, Arguments> map = new HashMap<String, Arguments>();
		Arguments args = PowerMockito.spy(new Arguments());
		args.SetValue(cilRefArg);
		map.put("call.5000.42365369.19172002189", args);
		sessionManager.setM_CallList(map);
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19172002189");
		doReturn(2).when(call).GetValueIntObj(14);
		doReturn(args).when(ctiSession).GetAllAgents();
		doReturn(1).when(args).NumElements();
		doReturn(cilRefArg).when(args).GetElement(1);
		doReturn("call.5000.42365369.19172002189").when(args).GetValueString(469);
		sessionManager.OnEvent(iEventID, args);
	}
	
	@Test
	public void testOnCallDeliveredEventExstingCallNotForAgent() throws Exception {
		testOnAgentInfoEventExstingCallNotForAgent(9);
	}
	
	@Test
	public void testOnCallEstablishedEventExstingCallNotForAgent() throws Exception {
		testOnAgentInfoEventExstingCallNotForAgent(10);
	}
	
	@Test
	public void testOnCallHeldEventExstingCallNotForAgent() throws Exception {
		testOnAgentInfoEventExstingCallNotForAgent(11);
	}
	
	@Test
	public void testOnCallRetrievedEventExstingCallNotForAgent() throws Exception {
		testOnAgentInfoEventExstingCallNotForAgent(12);
	}
	
	@Test
	public void testOnCallConnectionClearedEventExstingCallNotForAgent() throws Exception {
		testOnAgentInfoEventExstingCallNotForAgent(14);
	}
	
	@Test
	public void testOnCallClearedEventExstingCallNotForAgent() throws Exception {
		testOnAgentInfoEventExstingCallNotForAgent(13);
	}

	private void testOnAgentInfoEventExstingCallNotForAgent(int iEventID) {
		sessionManager.setbSessionConnected(true);
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "call.5000.42365369.19172002189");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "19172002189");
		Call call = PowerMockito.spy(new Call());
		doReturn(2).when(call).GetValueIntObj(14);
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		cilRefArg.SetValue(agent);
		Map<String, Arguments> map = new HashMap<String, Arguments>();
		Arguments args = PowerMockito.spy(new Arguments());
		args.SetValue(cilRefArg);
		map.put("call.5000.42365369.19172002189", null);
		sessionManager.setM_CallList(map);
		doReturn("call.5000.42365369.19172002189").when(args).GetValueString(469);
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19172002189");
		doReturn(args).when(ctiSession).GetAllAgents();
		doReturn(1).when(args).NumElements();
		doReturn(cilRefArg).when(args).GetElement(1);
		sessionManager.OnEvent(iEventID, args);
	}
	
	@Test
	public void testWrapUp() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent(anyString());
		doReturn(2).when(agent).SetAgentState((Arguments)anyObject());
		Map<String, Object> response = sessionManager.wrapUp("47483661", "19911050027", session);
		
		assertEquals(response.get("statusCode"), 2);
	}
	
	
	@Test
	public void testOnCallBeginEventInvalidSession() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		sessionManager.setbSessionConnected(false);
		sessionManager.OnEvent(23, args);
	}
	
	@Test
	public void testOnCallBeginEventNullCallUniqueId() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		sessionManager.setbSessionConnected(true);
		doReturn(null).when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn(0).when(args).GetValueIntObj(14);
		sessionManager.OnEvent(23, args);
	}
	
	
	@Test
	public void testOnCallBeginEventNullCurrentCall() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		//sessionManager.setbSessionConnected(true);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		sessionManager.setM_iPeripheralID("5000");
		sessionManager.setbSessionConnected(true);
		
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "19172002189");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(true).when(agent).GetValueBoolObj(Cti_IKeywordIDs.CTI_ISSUPERVISOR);
		
		doReturn("call.5000.56791511.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn(2).when(args).GetValueIntObj(Cti_IKeywordIDs.CTI_CALLTYPE);
		//doReturn(null).when(ctiSession).GetObjectFromObjectID(anyString());
		sessionManager.setAgentsSocketSessions(null);
		sessionManager.OnEvent(23, args);
	}
	
	
	@Test
	public void testOnCallBeginEventAgentFound() throws Exception {

		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		sessionManager.setM_iPeripheralID("5000");
		sessionManager.setbSessionConnected(true);
		
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "19172002189");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		
		doReturn("call.5000.56791511.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn("2").when(args).GetValueString(Cti_IKeywordIDs.CTI_CALLTYPE);
		doReturn(2).when(args).GetValueIntObj(Cti_IKeywordIDs.CTI_CALLTYPE);
		
		Call call = PowerMockito.spy(new Call());
		call.SetValue(24, "856");
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.56791511.19911050027");
		SkillGroup skillGroup = PowerMockito.spy(new SkillGroup());
		doReturn(skillGroup).when(ctiSession).GetObjectFromObjectID("skillgroup.5000.856");
		doReturn("SFCTITEST_3").when(skillGroup).GetValueString(Cti_IKeywordIDs.CTI_SKILLGROUPNAME);
		
		sessionManager.setAgentsSocketSessions(null);
		sessionManager.OnEvent(23, args);
	}
	
	
	@Test
	public void testOnCallBeginEventFirstCall() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		sessionManager.setM_iPeripheralID("5000");
		sessionManager.setbSessionConnected(true);
		
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "19172002189");
		
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn("call.5000.56791511.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn("2").when(args).GetValueString(Cti_IKeywordIDs.CTI_CALLTYPE);
		doReturn(2).when(args).GetValueIntObj(Cti_IKeywordIDs.CTI_CALLTYPE);
		
		Call call = PowerMockito.spy(new Call());
		call.SetValue(24, "856");
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.56791511.19911050027");
		doReturn(null).when(ctiSession).GetObjectFromObjectID("skillgroup.5000.856");
		
		sessionManager.OnEvent(23, args);
	}
	
	@Test
	public void testOnCallBeginEventCallObjPresent() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		sessionManager.setM_iPeripheralID("5000");
		sessionManager.setbSessionConnected(true);
		
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "19172002189");
		
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn("call.5000.56791511.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn("2").when(args).GetValueString(Cti_IKeywordIDs.CTI_CALLTYPE);
		doReturn(2).when(args).GetValueIntObj(Cti_IKeywordIDs.CTI_CALLTYPE);
		
		Call call = PowerMockito.spy(new Call());
		call.SetValue(24, "856");
		
		Map<String, Arguments> map = new HashMap<String, Arguments>();
		map.put("agent.5000.403466", args);
		sessionManager.setM_CallList(map);
		
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.56791511.19911050027");
		doReturn(null).when(ctiSession).GetObjectFromObjectID("skillgroup.5000.856");
		
		sessionManager.OnEvent(23, args);
	}
	
	
	@Test
	public void testOnCallEndEventFalseSession() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		sessionManager.setbSessionConnected(false);
		sessionManager.OnEvent(24, args);
	}
	
	
	@Test
	public void testOnCallEndEventAgentNotFound() throws Exception {
		createAgentSession(false);
		Arguments args = PowerMockito.spy(new Arguments());
		args.SetValue(469, "call.5000.56791511.19911050027");
		sessionManager.setbSessionConnected(true);
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
//		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "call.5000.56791511.19911050027");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "19911050027");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTSTATE, "4");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(true).when(agent).GetValueBoolObj(Cti_IKeywordIDs.CTI_ISSUPERVISOR);

		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		cilRefArg.SetValue(agent);
		
		Arguments newArgs = PowerMockito.spy(new Arguments());
		newArgs.SetValue(cilRefArg);
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.56791511.19911050027");
		doReturn(2).when(call).GetValueIntObj(14);
		doReturn(1).when(newArgs).NumElements();
		doReturn(cilRefArg).when(newArgs).GetElement(1);
		
		sessionManager.OnEvent(24, args);
	}
	
	@Test
	public void testOnCallEndEventAgentInCallList() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		args.SetValue(469, "call.5000.56791511.19911050027");
		sessionManager.setbSessionConnected(true);
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.56791511.19911050027");
		doReturn(2).when(call).GetValueIntObj(14);
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
//		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "call.5000.56791511.19911050027");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "19911050027");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(true).when(agent).GetValueBoolObj(Cti_IKeywordIDs.CTI_ISSUPERVISOR);
		
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		cilRefArg.SetValue(agent);
		
		Arguments newArgs = PowerMockito.spy(new Arguments());
		newArgs.SetValue(cilRefArg);
		
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.56791511.19911050027");
		doReturn(2).when(call).GetValueIntObj(14);
		doReturn(1).when(newArgs).NumElements();
		doReturn(cilRefArg).when(newArgs).GetElement(1);
		
		Map<String, Arguments> map = new HashMap<String, Arguments>();
		map.put("agent.5000.403466", args);
		sessionManager.setM_CallList(map);
		
		sessionManager.OnEvent(24, args);
	}
	
	@Test
	public void testOnCallEndEventCallListEmpty() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		args.SetValue(469, "call.5000.56791511.19911050027");
		sessionManager.setbSessionConnected(true);
		createAgentSession(true);
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Agent agent = PowerMockito.spy(new Agent());
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "19911050027");
		agent.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.403466");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(true).when(agent).GetValueBoolObj(Cti_IKeywordIDs.CTI_ISSUPERVISOR);
		
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		cilRefArg.SetValue(agent);
		
		Arguments newArgs = PowerMockito.spy(new Arguments());
		newArgs.SetValue(cilRefArg);
		
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.56791511.19911050027");
		doReturn(2).when(call).GetValueIntObj(14);
		doReturn(1).when(newArgs).NumElements();
		doReturn(cilRefArg).when(newArgs).GetElement(1);
		
		Map<String, Arguments> map = new HashMap<String, Arguments>();
		map.put("agent.5000.403466", null);
		sessionManager.setM_CallList(map);
		doReturn(true).when(session).isOpen();
		
		mockUserResponseAndThrowInterruptedEx();
		
		sessionManager.OnEvent(24, args);
	}
	/** reconnect **/
	
	//@Test
	public void testReconnectNumberOfCallsNot1() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(1).when(args).NumElements();
		
		Map<String, Object> response = sessionManager.reconnect("47483701", "10094520008", session);
		assertEquals(response.get("action"), "dropactive");
	}
	
	
	@Test
	public void testReconnectNumberOfCalls2() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(2).when(args).NumElements();
		
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 3;
		doReturn(value).when(call).GetValueShortObj(473);
		
		doReturn(1).when(call).Reconnect((Arguments) anyObject());
		
		Map<String, Object> response = sessionManager.reconnect("47483701", "10094520008", session);
		assertEquals(response.get("action"), "dropactive");
	}
	
	
	@Test
	public void testReconnectFailedCall() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(2).when(args).NumElements();
		
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = -1;
		doReturn(value).when(call).GetValueShortObj(473);
		
		doReturn(1).when(call).Reconnect((Arguments) anyObject());
		
		Map<String, Object> response = sessionManager.reconnect("47483701", "10094520008", session);
		assertEquals(response.get("action"), "dropactive");
	}
	
	
	@Test
	public void testReconnectNumberOfCalls2NotLCSHold() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(2).when(args).NumElements();
		
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 2;
		doReturn(value).when(call).GetValueShortObj(473);
		
		Map<String, Object> response = sessionManager.reconnect("47483701", "10094520008", session);
		assertEquals(response.get("action"), "dropactive");
	}
	
	
	
	@Test
	public void testReconnectNumberOfCalls2LCSHold() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(2).when(args).NumElements();
		
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 4;
		doReturn(value).when(call).GetValueShortObj(473);
		
		Map<String, Object> response = sessionManager.reconnect("47483701", "10094520008", session);
		assertEquals(response.get("action"), "dropactive");
	}
	
	
	/** getNumberOfCalls **/
	
	@Test
	public void testGetNumberOfCalls1() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(1).when(args).NumElements();
		
		Map<String, Object> response = sessionManager.getNumberOfCallsForAgent("47483701", "18991150132", "10094520008");
		assertEquals(response.get("action"), "getnoofcalls");
	}
	
	
	@Test
	public void testGetNumberOfCallsNull() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", null);
		sessionManager.setM_CallList(callList);
		
		Map<String, Object> response = sessionManager.getNumberOfCallsForAgent("47483701", "18991150132", "10094520008");
		assertEquals(response.get("action"), "getnoofcalls");
	}
	
	
	/** merge **/
	
	@Test
	public void testMergeNumberOfCalls2() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(2).when(args).NumElements();
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		
		short value = 3;
		doReturn(value).when(call).GetValueShortObj(473);
		
		doReturn(1).when(call).Conference((Arguments) anyObject());
		
		//TODO
		Map<String, Object> response = sessionManager.merge("47483701", "18991150132", session);
		
		assertEquals(response.get("action"), "merge");
	}
	
	
	@Test
	public void testMergeNotLCSConnect() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(2).when(args).NumElements();
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		
		short value = 2;
		doReturn(value).when(call).GetValueShortObj(473);
		
		//TODO
		Map<String, Object> response = sessionManager.merge("47483701", "18991150132", session);
		
		assertEquals(response.get("action"), "merge");
	}
	
	
	@Test
	public void testMergeNumberOfCallsNot2() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(1).when(args).NumElements();
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		
		short value = 3;
		doReturn(value).when(call).GetValueShortObj(473);
		
		//TODO
		Map<String, Object> response = sessionManager.merge("47483701", "18991150132", session);
		
		assertEquals(response.get("action"), "merge");
	}
	
	
	/** conference **/
	
	@Test
	public void testConferenceNumberOfCalls1() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(1).when(args).NumElements();
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 3;
		doReturn(value).when(call).GetValueShortObj(473);
		doReturn(1).when(call).MakeConsultCall((Arguments)anyObject());
		
		Map<String, Object> response = sessionManager.conference("47483701", "18991150132", "10094520008", session);
		assertEquals(response.get("action"), "conference");
	}
	
	
	@Test
	public void testConferenceNotLCSConnect() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(1).when(args).NumElements();
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 2;
		doReturn(value).when(call).GetValueShortObj(473);
		
		Map<String, Object> response = sessionManager.conference("47483701", "18991150132", "10094520008", session);
		assertEquals(response.get("action"), "conference");
	}
	
	
	
	@Test
	public void testConferenceNumberOfCallsNot1() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(2).when(args).NumElements();
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 3;
		doReturn(value).when(call).GetValueShortObj(473);
		
		Map<String, Object> response = sessionManager.conference("47483701", "18991150132", "10094520008", session);
		assertEquals(response.get("action"), "conference");
	}
	
	/** conference override **/
	
	@Test
	public void testConferenceOverrideNumberOfCalls1() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(1).when(args).NumElements();
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 3;
		doReturn(value).when(call).GetValueShortObj(473);
		doReturn(1).when(call).MakeConsultCall((Arguments)anyObject());
		
		Map<String, Object> response = sessionManager.conference(agent, "10094520008");
		assertEquals(response.get("action"), "conference");
	}
	
	
	@Test
	public void testConferenceOverrideNotLCSConnect() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(1).when(args).NumElements();
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 2;
		doReturn(value).when(call).GetValueShortObj(473);
		
		Map<String, Object> response = sessionManager.conference(agent, "10094520008");
		assertEquals(response.get("action"), "conference");
	}
	
	
	
	@Test
	public void testConferenceOverrideNumberOfCallsNot1() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(2).when(args).NumElements();
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 3;
		doReturn(value).when(call).GetValueShortObj(473);
		
		Map<String, Object> response = sessionManager.conference(agent, "10094520008");
		assertEquals(response.get("action"), "conference");
	}
	
	
	/** transfer **/
	
	@Test
	public void testTransferNumberOfCalls1() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(1).when(args).NumElements();
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 3;
		doReturn(value).when(call).GetValueShortObj(473);
		doReturn(1).when(call).SingleStepTransfer((Arguments)anyObject());
		
		Map<String, Object> response = sessionManager.transfer("47483701", "18991150132", "10094520008", session);
		assertEquals(response.get("action"), "transfer");
	}
	
	
	@Test
	public void testTransferNumberOfCallsNot1() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(2).when(args).NumElements();
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 2;
		doReturn(value).when(call).GetValueShortObj(473);
		
		Map<String, Object> response = sessionManager.transfer("47483701", "18991150132", "10094520008", session);
		assertEquals(response.get("action"), "transfer");
	}
	
	
	@Test
	public void testTransferNumberOfCallsNotLCSConnect() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		
		doReturn(2).when(args).NumElements();
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 3;
		doReturn(value).when(call).GetValueShortObj(473);
		
		Map<String, Object> response = sessionManager.transfer("47483701", "18991150132", "10094520008", session);
		assertEquals(response.get("action"), "transfer");
	}
	
	
	/** alternate **/
	
	@Test
	public void testAlternateNumberOfCalls2() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		
		Arguments args = PowerMockito.spy(new Arguments());
		
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		doReturn(2).when(args).NumElements();
		
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 3;
		doReturn(value).when(call).GetValueShortObj(473);
		doReturn(1).when(call).Alternate((Arguments) anyObject());
		
		Map<String, Object> response = sessionManager.alternate("47483701", "10094520008", session);
		assertEquals(response.get("action"), "alternate");
	}
	
	
	@Test
	public void testAlternateNumberOfCalls2NotLCSConnect() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		
		Arguments args = PowerMockito.spy(new Arguments());
		
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		doReturn(2).when(args).NumElements();
		
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 2;
		doReturn(value).when(call).GetValueShortObj(473);
		
		Map<String, Object> response = sessionManager.alternate("47483701", "10094520008", session);
		assertEquals(response.get("action"), "alternate");
	}
	
	
	/** makecall **/
	
	@Test
	public void testMakeCall() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		sessionManager.setM_iPeripheralID("5000");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		doReturn(1).when(agent).MakeCall((Arguments) anyObject());
		
		Map<String, Object> response = sessionManager.makeCall("47483701", "18991150132", "10094520008", session);
		assertEquals(response.get("action"),  "makecall");
		
	}
	
	/** makecall override **/
	@Test
	public void testMakeCallOverride() throws Exception {
		createAgentSession(true);
		doReturn(true).when(session).isOpen();
		Map<String, Object> agentsConfirmationMap = new ConcurrentHashMap<String, Object>();
		sessionManager.setAgentsConfirmationMap(agentsConfirmationMap);
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("TEST", "agent.5000.403466");
		sessionManager.setAgentAliasMap(agentAliasMap);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "18991150133");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTID, "403466");
		doReturn(2).when(agent).GetAgentState();
		doReturn(1).when(agent).MakeCall((Arguments) anyObject());
		Map<String, Object> response = sessionManager.makeCall("test", "18991150132", "12345678901");
		assertEquals(response.get("action"),  "makecall");
	}
	
	@Test
	public void testMakeCallOverrideConference() throws Exception {
		createAgentSession(true);
		doReturn(true).when(session).isOpen();
		Map<String, Object> agentsConfirmationMap = new ConcurrentHashMap<String, Object>();
		sessionManager.setAgentsConfirmationMap(agentsConfirmationMap);
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("TEST", "agent.5000.403466");
		sessionManager.setAgentAliasMap(agentAliasMap);
		Map<String, String> dataMap = new HashMap<String, String>();
		dataMap.put("action", "conference");
		dataMap.put("statusCode", "1");
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "18991150133");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTID, "403466");
		doReturn(4).when(agent).GetAgentState();
		PowerMockito.doReturn(dataMap).when(sessionManager, "conference", agent, "18991150132");
		doReturn(1).when(agent).MakeCall((Arguments) anyObject());
		Map<String, Object> response = sessionManager.makeCall("test", "18991150132", "12345678901");
		assertEquals(response.get("action"),  "conference");
	}
	
	@Test
	public void testMakeCallOverrideNotCorrectAgentState() throws Exception {
		createAgentSession(true);
		doReturn(true).when(session).isOpen();
		Map<String, Object> agentsConfirmationMap = new ConcurrentHashMap<String, Object>();
		sessionManager.setAgentsConfirmationMap(agentsConfirmationMap);
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("TEST", "agent.5000.403466");
		sessionManager.setAgentAliasMap(agentAliasMap);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "18991150133");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTID, "403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "18991150133");
		doReturn(3).when(agent).GetAgentState();
		doReturn(0).when(agent).MakeCall((Arguments) anyObject());
		
		Map<String, Object> response = sessionManager.makeCall("test", "18991150132", "12345678901");
		assertEquals(response.get("statusCode"),  0);
	}

	@Test
	public void testMakeCallOverrideAgentLoggedoutState() throws Exception {
		createAgentSession(true);
		Map<String, Object> agentsConfirmationMap = new ConcurrentHashMap<String, Object>();
		sessionManager.setAgentsConfirmationMap(agentsConfirmationMap);
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("TEST", "agent.5000.403466");
		sessionManager.setAgentAliasMap(agentAliasMap);
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "18991150133");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTID, "403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT, "18991150133");
		doReturn(1).when(agent).GetAgentState();
		doReturn(3).when(agent).MakeCall((Arguments) anyObject());
		
		Map<String, Object> response = sessionManager.makeCall("test", "18991150132", "12345678901");
		
		assertEquals(response.get("errorCode"),  103);
	}
	
	
	@Test
	public void testMakeCallOverrideAgentNotFound() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("TEST", "agent.5000.47483701");
		sessionManager.setAgentAliasMap(agentAliasMap);
		doReturn(null).when(sessionManager).getAgentByUID("agent.5000.47483701");
		Map<String, Object> response = sessionManager.makeCall("test", "18991150132", "12345678901");
		assertEquals(response.get("errorCode"),  102);
	}
	
	@Test
	public void testMakeCallOverrideAliasNotFound() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("TEST", "agent.5000.47483701");
		sessionManager.setAgentAliasMap(agentAliasMap);
		Map<String, Object> response = sessionManager.makeCall("abc", "18991150132", "12345678901");
		assertEquals(response.get("errorCode"),  102);
	}
	
	/** sendDTMFDigits **/
	
	@Test
	public void testSendDTMFDigits() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		doReturn(1).when(args).NumElements();
		
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 3;
		doReturn(value).when(call).GetValueShortObj(473);
		doReturn(value).when(call).GetValueShortObj(14);
		
		doReturn(1).when(call).SendDTMFSignal((Arguments) anyObject());
		
		Map<String, Object> response = sessionManager.sendDTMFDigits("47483701", "10094520008", "602", session);
		assertEquals(response.get("statusCode"), 1);
	}
	
	
	
	@Test
	public void testSendDTMFDigitsNotLCSConnect() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID(anyString());
		
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn("agent.5000.47483701").when(agent).GetValueString(469);
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483701", args);
		sessionManager.setM_CallList(callList);
		doReturn(1).when(args).NumElements();
		
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		doReturn(cilRefArg).when(args).GetElement(anyInt());
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		short value = 2;
		doReturn(value).when(call).GetValueShortObj(473);
		doReturn(value).when(call).GetValueShortObj(14);
		
		Map<String, Object> response = sessionManager.sendDTMFDigits("47483701", "10094520008", "602", session);
		assertEquals(response.get("statusCode"), 0);
	}
	
	/** onQueryAgentStateConf **/
	
	@Test
	public void testOnQueryAgentStateConf() throws Exception {
		createAgentSession(true);
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(1).when(args).NumElements();
		doReturn(4).when(args).GetValueIntObj(10);
		doReturn("agent.5000.403466").when(args).GetValueString(469);
		doReturn("403466").when(args).GetValueString(370);
		doReturn(true).when(session).isOpen();
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		sessionManager.OnEvent(37, args);
		assertEquals(agentDeviceMap.size(), 1);
	}
	
	
	@Test
	public void testOnQueryAgentStateConfNullAgentId() throws Exception {
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(4).when(args).GetValueIntObj(10);
		doReturn("agent.5000.47483701").when(args).GetValueString(469);
		doReturn(null).when(args).GetValueString(370);
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		sessionManager.OnEvent(37, args);
		
		assertEquals(agentDeviceMap.size(), 0);
	}
	
	
	/** sendDTMFEventResponseEvent **/
	
	@Test
	public void testSendDTMFEventResponseEmptyDeviceMap() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19172002189").when(args).GetValueString(469);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		sessionManager.OnEvent(92, args);
	}
	
	
	@Test
	public void testSendDTMFEventResponseNullSessionMap() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19172002189").when(args).GetValueString(469);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19172002189", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		sessionManager.setAgentsSocketSessions(null);
		sessionManager.OnEvent(92, args);
	}
	
	@Test
	public void testSendDTMFEventResponseNoAgentSessionMap() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19172002189").when(args).GetValueString(469);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19172002189", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
/*		
		Map<String, AgentSessionInfo> socketSessionMap = new HashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		socketSessionMap.put("403467", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(socketSessionMap);
*/		
		createAgentSession(true);
		sessionManager.OnEvent(92, args);
	}
	
	
	@Test
	public void testSendDTMFEventResponseAgentNullSession() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19172002189").when(args).GetValueString(469);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19172002189", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
/*		
		Map<String, AgentSessionInfo> socketSessionMap = new HashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(null);
		socketSessionMap.put("403466", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(socketSessionMap);
*/
		createAgentSession(true);
		sessionManager.OnEvent(92, args);
	}
	
	
	@Test
	public void testSendDTMFEventResponseAgentSessionNotOpen() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19172002189").when(args).GetValueString(469);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19172002189", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
/*		
		Map<String, AgentSessionInfo> socketSessionMap = new HashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		socketSessionMap.put("403466", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(socketSessionMap);
*/
		createAgentSession(true);
		doReturn(false).when(session).isOpen();
		sessionManager.OnEvent(92, args);
	}
	
	
	@Test
	public void testSendDTMFEventResponseAgentNotActive() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19172002189").when(args).GetValueString(469);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19172002189", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
/*		
		Map<String, AgentSessionInfo> socketSessionMap = new HashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(false);
		agentSessionInfo.setSession(session);
		socketSessionMap.put("403466", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(socketSessionMap);
*/		
		createAgentSession(false);
		doReturn(true).when(session).isOpen();
		sessionManager.OnEvent(92, args);
	}
	
	
	
	@Test
	public void testSendDTMFEventResponseAgentActive() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19172002189").when(args).GetValueString(469);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19172002189", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
/*		
		Map<String, AgentSessionInfo> socketSessionMap = new HashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		socketSessionMap.put("403466", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(socketSessionMap);
*/
		createAgentSession(true);
		doReturn(true).when(session).isOpen();
		mockUserResponse();
		sessionManager.OnEvent(92, args);
	}
	
	@Test
	public void testSendDTMFEventResponseInterruptedException() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19172002189").when(args).GetValueString(469);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19172002189", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
/*		
		Map<String, AgentSessionInfo> socketSessionMap = new HashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		socketSessionMap.put("403466", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(socketSessionMap);
*/
		createAgentSession(true);
		doReturn(true).when(session).isOpen();
		mockUserResponseAndThrowInterruptedEx();
		sessionManager.OnEvent(92, args);
	}
	
	
	
	@Test
	public void testSendDTMFEventResponseExecutionException() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19172002189").when(args).GetValueString(469);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19172002189", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
/*		
		Map<String, AgentSessionInfo> socketSessionMap = new HashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		socketSessionMap.put("403466", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(socketSessionMap);
*/
		createAgentSession(true);
		doReturn(true).when(session).isOpen();
		mockUserResponseAndThrowExecutionEx();
		sessionManager.OnEvent(92, args);
	}
	
	
	@Test
	public void testSendDTMFEventResponseTimeoutException() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19172002189").when(args).GetValueString(469);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19172002189", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
/*		
		Map<String, AgentSessionInfo> socketSessionMap = new HashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		socketSessionMap.put("403466", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(socketSessionMap);
*/
		createAgentSession(true);
		doReturn(true).when(session).isOpen();
		mockUserResponseAndThrowTimeoutEx();
		sessionManager.OnEvent(92, args);
	}
	
	
	/** onCallDataUpdateEvent **/
	
	@Test
	public void testOnCallDataUpdateEventSessionNotConnected() throws Exception {
		sessionManager.setbSessionConnected(false);
		
		Arguments args =  PowerMockito.spy(new Arguments());
		sessionManager.OnEvent(25, args);
	}
	
	
	
	@Test
	public void testOnCallDataUpdateEventCallIDNull() throws Exception {
		sessionManager.setbSessionConnected(true);
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn(new StringBuffer("PeripheralID")).when(args).DumpArgs();
		doReturn(null).when(args).GetValueString(469);
		
		sessionManager.OnEvent(25, args);
	}

	
	@Test
	public void testOnCallDataUpdateEventCallIDSame() throws Exception {
		sessionManager.setbSessionConnected(true);
		createAgentSession(true);
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn("call.5000.42365369.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_OLDUNIQUEOBJECTID);
		doReturn(15).when(args).GetValueIntObj(Cti_IKeywordIDs.CTI_CALLTYPE);

		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19911050027");
		doReturn(2).when(call).GetValueIntObj(14);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn("agent.5000.403466").when(agent).GetValueString(Constants.UNIQUE_OBJECT_ID);
		doReturn("agent.5000.403466").when(agent).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn(true).when(session).isOpen();
		mockUserResponse();
		
		sessionManager.OnEvent(25, args);
	}
	
	@Test
	public void testOnCallDataUpdateEventCallIDConsult() throws Exception {
		sessionManager.setbSessionConnected(true);
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn("call.5000.42365379.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_OLDUNIQUEOBJECTID);
		doReturn("12").when(args).GetValueString(Cti_IKeywordIDs.CTI_CALLTYPE);

		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19911050027");
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.47483711");
		sessionManager.setAgentDeviceMap(agentDeviceMap);

		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483711", args);
		sessionManager.setM_CallList(callList);
		
		mockUserResponse();
		
		sessionManager.OnEvent(25, args);
	}
	
	@Test
	public void testOnCallDataUpdateEventCallIDTalking() throws Exception {
		sessionManager.setbSessionConnected(true);
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn("call.5000.42365379.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_OLDUNIQUEOBJECTID);
		doReturn("4").when(args).GetValueString(Cti_IKeywordIDs.CTI_CALLTYPE);

		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19911050027");
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.47483711");
		sessionManager.setAgentDeviceMap(agentDeviceMap);

		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.47483711", args);
		sessionManager.setM_CallList(callList);
		
		doReturn("19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_CONNECTIONDEVICEID);
		doReturn("19911050037").when(args).GetValueString(Cti_IKeywordIDs.CTI_NEWCONNECTIONDEVICEID);
		
		mockUserResponse();
		
		sessionManager.OnEvent(25, args);
	}
	
	@Test
	public void testOnCallDataUpdateEventCallListEmpty() throws Exception {
		sessionManager.setbSessionConnected(true);
		createAgentSession(true);
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn("call.5000.42365379.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_OLDUNIQUEOBJECTID);
		doReturn("4").when(args).GetValueString(Cti_IKeywordIDs.CTI_CALLTYPE);

		Agent agent = PowerMockito.spy(new Agent());
		doReturn("agent.5000.403466").when(agent).GetValueString(Constants.UNIQUE_OBJECT_ID);
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19911050027");
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		doReturn("19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_CONNECTIONDEVICEID);
		doReturn("19911050037").when(args).GetValueString(Cti_IKeywordIDs.CTI_NEWCONNECTIONDEVICEID);
		
		doReturn(true).when(session).isOpen();
		doNothing().when(sessionMessageHandler).sendMessageToClient((Session) anyObject(), anyString());
		
		sessionManager.OnEvent(25, args);
	}
	
	@Test
	public void testOnCallDataUpdateEventOutBoundCall() throws Exception {
		sessionManager.setbSessionConnected(true);
		createAgentSession(true);
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn("call.5000.42365379.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_OLDUNIQUEOBJECTID);
		doReturn("34").when(args).GetValueString(Cti_IKeywordIDs.CTI_CALLTYPE);

		Agent agent = PowerMockito.spy(new Agent());
		doReturn("agent.5000.403466").when(agent).GetValueString(Constants.UNIQUE_OBJECT_ID);
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19911050027");
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		doReturn("19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_CONNECTIONDEVICEID);
		doReturn("19911050037").when(args).GetValueString(Cti_IKeywordIDs.CTI_NEWCONNECTIONDEVICEID);
		
		doReturn(true).when(session).isOpen();
		doNothing().when(sessionMessageHandler).sendMessageToClient((Session) anyObject(), anyString());
		
		Arguments eccArguments =  PowerMockito.spy(new Arguments());
		doReturn(eccArguments).when(args).GetValueArray(Cti_IKeywordIDs.CTI_ECC);
		doReturn(1).when(eccArguments).NumElements();
		doReturn("BABuddyName").when(eccArguments).GetElementKey(1);
		doReturn("test").when(eccArguments).GetValueString("BABuddyName");
		sessionManager.OnEvent(25, args);
	}
	@Test
	public void testOnCallDataUpdateEventTimeoutException() throws Exception {
		sessionManager.setbSessionConnected(true);
		createAgentSession(true);
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn("call.5000.42365379.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_OLDUNIQUEOBJECTID);
		doReturn("4").when(args).GetValueString(Cti_IKeywordIDs.CTI_CALLTYPE);

		Agent agent = PowerMockito.spy(new Agent());
		doReturn("agent.5000.403466").when(agent).GetValueString(Constants.UNIQUE_OBJECT_ID);
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19911050027");
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		doReturn("19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_CONNECTIONDEVICEID);
		doReturn("19911050037").when(args).GetValueString(Cti_IKeywordIDs.CTI_NEWCONNECTIONDEVICEID);
		
		doReturn(true).when(session).isOpen();
		mockUserResponseAndThrowTimeoutEx();
		
		sessionManager.OnEvent(25, args);
	}
	
	@Test
	public void testOnCallDataUpdateEventForSupervisor() throws Exception {
		sessionManager.setbSessionConnected(true);
		createAgentSession(true);
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn("call.5000.42365379.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_OLDUNIQUEOBJECTID);
		doReturn("21").when(args).GetValueString(Cti_IKeywordIDs.CTI_CALLTYPE);

		Agent agent = PowerMockito.spy(new Agent());
		doReturn("agent.5000.403466").when(agent).GetValueString(Constants.UNIQUE_OBJECT_ID);
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTID, "403466");
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19911050027");
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		doReturn("19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_CONNECTIONDEVICEID);
		doReturn("19911050037").when(args).GetValueString(Cti_IKeywordIDs.CTI_NEWCONNECTIONDEVICEID);
		doReturn("19911050027").when(args).GetValueString("DialedNumber");

		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.403466");
		
		doReturn(true).when(session).isOpen();
		doNothing().when(sessionMessageHandler).sendMessageToClient((Session) anyObject(), anyString());
		

		
		sessionManager.OnEvent(25, args);
	}
	
	@Test
	public void testOnCallDataUpdateEventForAdditionalCallData() throws Exception {
		sessionManager.setbSessionConnected(true);
		createAgentSession(true);
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		doReturn("call.5000.42365379.19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_OLDUNIQUEOBJECTID);
		doReturn("4").when(args).GetValueString(Cti_IKeywordIDs.CTI_CALLTYPE);
//		doReturn(7).when(args).GetValueIntObj(Cti_IKeywordIDs.CTI_CALLTYPE);
		doReturn(1).when(args).NumElements();
		
		Arguments elements =  PowerMockito.spy(new Arguments());
		doReturn(7).when(elements).GetValueIntObj(Cti_IKeywordIDs.CTI_TYPE);
		doReturn(1).when(elements).NumElements();
		doReturn("PGStatus").when(elements).GetElementKey(1);
		doReturn("0").when(elements).GetValueString("PGStatus");
		
		doReturn(elements).when(args).GetElement(1);
		doReturn("PGStatus").when(args).GetElementKey(1);
		
		Agent agent = PowerMockito.spy(new Agent());
		doReturn("agent.5000.403466").when(agent).GetValueString(Constants.UNIQUE_OBJECT_ID);
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
//		agent.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "marctest");
//		agent.SetValue(Cti_IKeywordIDs.CTI_AGENTID, "marctest");
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19911050027");
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		doReturn("19911050027").when(args).GetValueString(Cti_IKeywordIDs.CTI_CONNECTIONDEVICEID);
		doReturn("19911050037").when(args).GetValueString(Cti_IKeywordIDs.CTI_NEWCONNECTIONDEVICEID);
//		doReturn("19911050027").when(args).GetValueString("DialedNumber");

		doReturn(agent).when(sessionManager).getAgentByUID("agent.5000.403466");
		
		doReturn(true).when(session).isOpen();
		doNothing().when(sessionMessageHandler).sendMessageToClient((Session) anyObject(), anyString());
		

		
		sessionManager.OnEvent(25, args);
	}
	
	/** eSnapshotCallConf **/
	
	@Test
	public void testeSnapshotCallConfNullCallObject() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn(null).when(args).GetValueString(469);
		sessionManager.OnEvent(83, args);
	}
	
	
	@Test
	public void testeSnapshotCallConfNotNullCallObject() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19911050027").when(args).GetValueString(469);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19911050027");
		Map<String, Arguments> map = new HashMap<String, Arguments>();
		map.put("agent.5000.403466", new Arguments());
		sessionManager.setM_CallList(map);
		
		sessionManager.OnEvent(83, args);
	}
	
	
	@Test
	public void testeSnapshotCallConfNotInCallMap() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn("call.5000.42365369.19911050027").when(args).GetValueString(469);
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("19911050027", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(ctiSession).GetObjectFromObjectID("call.5000.42365369.19911050027");
		Map<String, Arguments> map = new HashMap<String, Arguments>();
		map.put("agent.5000.403467", new Arguments());
		sessionManager.setM_CallList(map);
		
		sessionManager.OnEvent(83, args);
	}
	
	/** onCtiFailureEvent **/
	
	@Test
	public void testOnCtiFailurePG0SID9() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn(true).when(args).IsValid(555);
		doReturn("Error occurred").when(args).GetValueString(555);
		doReturn(0).when(args).GetValueIntObj(8);
		doReturn(9).when(args).GetValueIntObj(44);
		sessionManager.OnEvent(536870918 , args);
	}
	
	
	@Test
	public void testOnCtiFailurePG1SID9() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn(true).when(args).IsValid(555);
		doReturn("Error occurred").when(args).GetValueString(555);
		doReturn(1).when(args).GetValueIntObj(8);
		doReturn(9).when(args).GetValueIntObj(44);
		
		doReturn(1).when(args).NumElements();
		doReturn("PGStatus").when(args).GetElementKey(1);
		doReturn("0").when(args).GetValueString(1);
		sessionManager.OnEvent(536870918 , args); 
	}
	
	@Test
	public void testOnCtiFailurePG0SID10NotInDeviceMap() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn(true).when(args).IsValid(555);
		doReturn("Error occurred").when(args).GetValueString(555);
		doReturn(0).when(args).GetValueIntObj(8);
		doReturn(10).when(args).GetValueIntObj(44);
		
		doReturn(1).when(args).NumElements();
		doReturn("PGStatus").when(args).GetElementKey(1);
		doReturn("0").when(args).GetValueString(1);
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("18991150132", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		doReturn("18991150133").when(args).GetValueString(688);
		sessionManager.OnEvent(536870918 , args); 
	}
	
	
	@Test
	public void testOnCtiFailurePG0SID10InDeviceMap() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn(true).when(args).IsValid(555);
		doReturn("Error occurred").when(args).GetValueString(555);
		doReturn(0).when(args).GetValueIntObj(8);
		doReturn(10).when(args).GetValueIntObj(44);
		
		doReturn(1).when(args).NumElements();
		doReturn("PGStatus").when(args).GetElementKey(1);
		doReturn("0").when(args).GetValueString(1);
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("18991150132", "agent.5000.403466");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		doReturn("18991150132").when(args).GetValueString(688);
/*		
		Map<String, AgentSessionInfo> socketSessionMap = new HashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		socketSessionMap.put("403466", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(socketSessionMap);
*/		
		createAgentSession(true);
		doReturn(true).when(session).isOpen();
		doNothing().when(sessionMessageHandler).sendMessageToClient((Session) anyObject(), anyString());
		
		sessionManager.OnEvent(536870918 , args); 
	}
	
	
	@Test
	public void testOnCtiFailurePG4SID4() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn(true).when(args).IsValid(555);
		doReturn("Error occurred").when(args).GetValueString(555);
		doReturn(4).when(args).GetValueIntObj(8);
		doReturn(4).when(args).GetValueIntObj(44);
		
		doReturn(1).when(args).NumElements();
		doReturn("PGStatus").when(args).GetElementKey(1);
		doReturn("0").when(args).GetValueString(1);
		
		sessionManager.OnEvent(536870918 , args); 
	}
	
	
	@Test
	public void testOnCtiFailurePG0SID3() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn(true).when(args).IsValid(555);
		doReturn("Error occurred").when(args).GetValueString(555);
		doReturn(0).when(args).GetValueIntObj(8);
		doReturn(3).when(args).GetValueIntObj(44);
		
		doReturn(1).when(args).NumElements();
		doReturn("PGStatus").when(args).GetElementKey(1);
		doReturn("0").when(args).GetValueString(1);
		
		sessionManager.OnEvent(536870918 , args); 
	}
	
	
	@Test
	public void testOnCtiFailureOther() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn(true).when(args).IsValid(555);
		doReturn("Error occurred").when(args).GetValueString(555);
		doReturn(0).when(args).GetValueIntObj(8);
		doReturn(2).when(args).GetValueIntObj(44);
		
		doReturn(1).when(args).NumElements();
		doReturn("PGStatus").when(args).GetElementKey(1);
		doReturn("0").when(args).GetValueString(1);
/*		
		Map<String, AgentSessionInfo> socketSessionMap = new HashMap<String, AgentSessionInfo>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		socketSessionMap.put("403466", agentSessionInfo);
		sessionManager.setAgentsSocketSessions(socketSessionMap);
*/		
		createAgentSession(true);
		doReturn(true).when(session).isOpen();
		doNothing().when(sessionMessageHandler).sendMessageToClient((Session) anyObject(), anyString());
		
		sessionManager.OnEvent(536870918 , args); 
	}
	
	
	/** onConfigAgentEvent **/
	
	@Test
	public void testOnConfigAgentEventRecordType0() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn(1).when(args).GetValueIntObj(720);
		
		Arguments newArgs =  PowerMockito.spy(new Arguments());
		doReturn(newArgs).when(args).GetValueArray(539);
		doReturn(newArgs).when(newArgs).GetElementArguments(anyInt());
		doReturn(0).when(newArgs).GetValueIntObj(718);
		doReturn("OE0IPH").when(newArgs).GetValueString(719);
		doReturn("agent.5000.47483711").when(newArgs).GetValueString(469);
		
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		sessionManager.OnEvent(237, args);
		assertTrue(!agentAliasMap.isEmpty());
	}
	
	@Test
	public void testOnConfigAgentEventRecordType1() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn(1).when(args).GetValueIntObj(720);
		
		Arguments newArgs =  PowerMockito.spy(new Arguments());
		doReturn(newArgs).when(args).GetValueArray(539);
		doReturn(newArgs).when(newArgs).GetElementArguments(anyInt());
		doReturn(1).when(newArgs).GetValueIntObj(718);
		doReturn("OE0IPH@OPR.SYSTEM.TEST.STATEFARM.O").when(newArgs).GetValueString(719);
		doReturn("agent.5000.47483711").when(newArgs).GetValueString(469);
		
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("OE0IPH", "agent.5000.47483711");
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		sessionManager.OnEvent(237, args);
		assertTrue(!agentAliasMap.isEmpty());
	}
	
	@Test
	public void testOnConfigAgentEventRecordType2() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn(1).when(args).GetValueIntObj(720);
		
		Arguments newArgs =  PowerMockito.spy(new Arguments());
		doReturn(newArgs).when(args).GetValueArray(539);
		doReturn(newArgs).when(newArgs).GetElementArguments(anyInt());
		doReturn(2).when(newArgs).GetValueIntObj(718);
		doReturn("OE0IPH").when(newArgs).GetValueString(719);
		doReturn("agent.5000.47483711").when(newArgs).GetValueString(469);
		
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("OE0IPH", "agent.5000.47483711");
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		sessionManager.OnEvent(237, args);
		assertTrue(agentAliasMap.isEmpty());
	}
	
	
	@Test
	public void testOnConfigAgentEventRecordType3() throws Exception {
		Arguments args =  PowerMockito.spy(new Arguments());
		doReturn(1).when(args).GetValueIntObj(720);
		
		Arguments newArgs =  PowerMockito.spy(new Arguments());
		doReturn(newArgs).when(args).GetValueArray(539);
		doReturn(newArgs).when(newArgs).GetElementArguments(anyInt());
		doReturn(3).when(newArgs).GetValueIntObj(718);
		doReturn("OE0IPH").when(newArgs).GetValueString(719);
		doReturn("agent.5000.47483711").when(newArgs).GetValueString(469);
		
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("OE0IPH", "agent.5000.47483711");
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		sessionManager.OnEvent(237, args);
		assertTrue(!agentAliasMap.isEmpty());
	}
	
	@Test
	public void testCleanUp() throws Exception {
		doReturn(1).when(ctiSession).Disconnect((Arguments)anyObject()) ;
		sessionManager.cleanUp();
	}
	
	@Test
	public void testAgentsSocketSessions() throws Exception {
		createAgentSession(true);
		Map<String, Set<Session>> sessionMap = sessionManager.getAgentsSocketSessions();
		assertEquals(1, sessionMap.size());
	}
	
	private void createAgentSession(boolean isActive){
		Map<String, Set<Session>> agentSocketSessionMap = new HashMap<String, Set<Session>>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(isActive);
		agentSessionInfo.setSession(session);
		Set<Session> listOfAgentSessionInfo = new HashSet<Session>();
		listOfAgentSessionInfo.add(session);
		agentSocketSessionMap.put("403466", listOfAgentSessionInfo);
		sessionManager.setAgentsSocketSessions(agentSocketSessionMap);
	}
	
	
	@SuppressWarnings("unchecked")
	private void mockUserResponse() throws Exception {
		Async async = Mockito.mock(Async.class);
		Future<Void> future = Mockito.mock(Future.class);
		doReturn(async).when(session).getAsyncRemote();
		doReturn(future).when(async).sendText(anyString());
		doReturn(null).when(future).get(300, TimeUnit.MILLISECONDS);
	}
	
	@SuppressWarnings("unchecked")
	private void mockUserResponseAndThrowInterruptedEx() throws Exception {
		Async async = Mockito.mock(Async.class);
		Future<Void> future = Mockito.mock(Future.class);
		doReturn(async).when(session).getAsyncRemote();
		doReturn(future).when(async).sendText(anyString());
		doThrow(new InterruptedException("Failed to send message")).when(future).get(300, TimeUnit.MILLISECONDS);
	}
	
	@SuppressWarnings("unchecked")
	private void mockUserResponseAndThrowExecutionEx() throws Exception {
		Async async = Mockito.mock(Async.class);
		Future<Void> future = Mockito.mock(Future.class);
		doReturn(async).when(session).getAsyncRemote();
		doReturn(future).when(async).sendText(anyString());
		doThrow(new ExecutionException("Failed to send message", new Throwable())).when(future).get(300, TimeUnit.MILLISECONDS);
	}
	
	
	@SuppressWarnings("unchecked")
	private void mockUserResponseAndThrowTimeoutEx() throws Exception {
		Async async = Mockito.mock(Async.class);
		Future<Void> future = Mockito.mock(Future.class);
		doReturn(async).when(session).getAsyncRemote();
		doReturn(future).when(async).sendText(anyString());
		doThrow(new TimeoutException("Failed to send message")).when(future).get(300, TimeUnit.MILLISECONDS);
	}
	

	@Test
	public void testRequestTeamStatisticsNotSupervisor() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		sessionManager.setM_iPeripheralID("5000");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(false).when(agent).IsSupervisor();
		
		doReturn(1).when(agent).RequestAgentTeamList((Arguments) anyObject());
		
		Map<String, Object> response = sessionManager.requestTeamStatistics("403466", session);
		assertEquals(0, response.get("statusCode"));
		
	}
	
	@Test
	public void testRequestTeamStatisticsByAliasNotSupervisor() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		sessionManager.setM_iPeripheralID("5000");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(false).when(agent).IsSupervisor();
		doReturn("10").when(session).getId();
		doReturn(1).when(agent).RequestAgentTeamList((Arguments) anyObject());
		
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("MARCTEST", "agent.5000.403466");
		agentAliasMap.put("TEST1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		Map<String, Object> response = sessionManager.requestTeamStatisticsByAlias("MARCTEST", session);
		assertEquals(0, response.get("statusCode"));
		
	}
	
	@Test
	public void testRequestTeamStatisticsIsSupervisorNoCall() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		sessionManager.setM_iPeripheralID("5000");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(true).when(agent).IsSupervisor();
		doReturn(1).when(agent).RequestAgentTeamList((Arguments) anyObject());
		
		doReturn("agent.5000.403466").when(agent).GetValueString(469);
		
		Arguments aCallArgs = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.404046", aCallArgs);
		sessionManager.setM_CallList(callList);
		
		Map<String, Object> response = sessionManager.requestTeamStatistics("403466", session);
		assertEquals(1, response.get("statusCode"));
		
	}
	
	@Test
	public void testRequestTeamStatisticsByAliasIsSupervisorNoCall() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		sessionManager.setM_iPeripheralID("5000");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(true).when(agent).IsSupervisor();
		doReturn(1).when(agent).RequestAgentTeamList((Arguments) anyObject());
		doReturn("10").when(session).getId();
		doReturn("agent.5000.403466").when(agent).GetValueString(469);
		
		Arguments aCallArgs = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.404046", aCallArgs);
		sessionManager.setM_CallList(callList);
		
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("MARCTEST", "agent.5000.403466");
		agentAliasMap.put("TEST1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		Map<String, Object> response = sessionManager.requestTeamStatisticsByAlias("marctest", session);
		assertEquals(1, response.get("statusCode"));
		
	}
	
	@Test
	public void testRequestTeamStatisticsIsSupervisorWithCall() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		sessionManager.setM_iPeripheralID("5000");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(true).when(agent).IsSupervisor();
		doReturn(1).when(agent).RequestAgentTeamList((Arguments) anyObject());
		
		doReturn("agent.5000.403466").when(agent).GetValueString(469);
		
		Arguments aCallArgs = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.403466", aCallArgs);
		sessionManager.setM_CallList(callList);
		
		doReturn(1).when(aCallArgs).NumElements();
		CilRefArg currRefArg =  PowerMockito.spy(new CilRefArg());
		doReturn(currRefArg).when(aCallArgs).GetElement(1);
		
		Call currentCall = PowerMockito.spy(new Call());
		doReturn(currentCall).when(currRefArg).GetValue();
		doReturn(2).when(currentCall).GetValueIntObj(Cti_IKeywordIDs.CTI_CALLTYPE);
		
		Map<String, Object> response = sessionManager.requestTeamStatistics("403466", session);
		assertEquals(1, response.get("statusCode"));
		
	}
	
	
	@Test
	public void testRequestTeamStatisticsByAliasIsSupervisorWithCall() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		sessionManager.setM_iPeripheralID("5000");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(true).when(agent).IsSupervisor();
		doReturn(1).when(agent).RequestAgentTeamList((Arguments) anyObject());
		doReturn("10").when(session).getId();
		doReturn("agent.5000.403466").when(agent).GetValueString(469);
		
		Arguments aCallArgs = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.403466", aCallArgs);
		sessionManager.setM_CallList(callList);
		
		doReturn(1).when(aCallArgs).NumElements();
		CilRefArg currRefArg =  PowerMockito.spy(new CilRefArg());
		doReturn(currRefArg).when(aCallArgs).GetElement(1);
		
		Call currentCall = PowerMockito.spy(new Call());
		doReturn(currentCall).when(currRefArg).GetValue();
		doReturn(2).when(currentCall).GetValueIntObj(Cti_IKeywordIDs.CTI_CALLTYPE);
		
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("MARCTEST", "agent.5000.403466");
		agentAliasMap.put("TEST1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		Map<String, Object> response = sessionManager.requestTeamStatisticsByAlias("marctest", session);
		assertEquals(1, response.get("statusCode"));
		
	}
	
	
	@Test
	public void testRequestTeamStatisticsIsSupervisorWithCall21() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		sessionManager.setM_iPeripheralID("5000");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(true).when(agent).IsSupervisor();
		doReturn(1).when(agent).RequestAgentTeamList((Arguments) anyObject());
		
		doReturn("agent.5000.403466").when(agent).GetValueString(469);
		
		Arguments aCallArgs = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.403466", aCallArgs);
		sessionManager.setM_CallList(callList);
		
		doReturn(1).when(aCallArgs).NumElements();
		CilRefArg currRefArg =  PowerMockito.spy(new CilRefArg());
		doReturn(currRefArg).when(aCallArgs).GetElement(1);
		
		Call currentCall = PowerMockito.spy(new Call());
		doReturn(currentCall).when(currRefArg).GetValue();
		doReturn(21).when(currentCall).GetValueIntObj(Cti_IKeywordIDs.CTI_CALLTYPE);
		doReturn("9172002189").when(currentCall).GetValueString("CalledDeviceID");
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("9172002189", "agent.5000.403467");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Agent monitoringAgent = PowerMockito.spy(new Agent());
		doReturn(monitoringAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.403467");
		doReturn("OE0RLM").when(monitoringAgent).GetValueString(719);
		doReturn("403467").when(monitoringAgent).GetValueString(367);
		
		
		Map<String, Object> response = sessionManager.requestTeamStatistics("403466", session);
		assertEquals(1, response.get("statusCode"));
		
	}
	
	@Test
	public void testRequestTeamStatisticsIsSupervisorByAliasWithCall21() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn("10").when(session).getId();
		sessionManager.setM_iPeripheralID("5000");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(true).when(agent).IsSupervisor();
		doReturn(1).when(agent).RequestAgentTeamList((Arguments) anyObject());
		
		doReturn("agent.5000.403466").when(agent).GetValueString(469);
		
		Arguments aCallArgs = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.403466", aCallArgs);
		sessionManager.setM_CallList(callList);
		
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("MARCTEST", "agent.5000.403466");
		agentAliasMap.put("TEST1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		sessionManager.setAgentAliasMap(agentAliasMap);
		
		doReturn(1).when(aCallArgs).NumElements();
		CilRefArg currRefArg =  PowerMockito.spy(new CilRefArg());
		doReturn(currRefArg).when(aCallArgs).GetElement(1);
		
		Call currentCall = PowerMockito.spy(new Call());
		doReturn(currentCall).when(currRefArg).GetValue();
		doReturn(21).when(currentCall).GetValueIntObj(Cti_IKeywordIDs.CTI_CALLTYPE);
		doReturn("9172002189").when(currentCall).GetValueString("CalledDeviceID");
		
		Map<String, String> agentDeviceMap = new HashMap<String, String>();
		agentDeviceMap.put("9172002189", "agent.5000.403467");
		sessionManager.setAgentDeviceMap(agentDeviceMap);
		
		Agent monitoringAgent = PowerMockito.spy(new Agent());
		doReturn(monitoringAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.403467");
		doReturn("OE0RLM").when(monitoringAgent).GetValueString(719);
		doReturn("403467").when(monitoringAgent).GetValueString(367);
		
		
		Map<String, Object> response = sessionManager.requestTeamStatisticsByAlias("marctest", session);
		assertEquals(1, response.get("statusCode"));
		
	}
	
	@Test
	public void testTeamMemberLogoutWhileInNotReady() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		sessionManager.setM_iPeripheralID("5000");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn("19911050027").when(agent).GetValueString(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT);
		
		doReturn(2).when(agent).GetValueIntObj(Cti_IKeywordIDs.CTI_AGENTSTATE);		
		
		doReturn(1).when(sessionManager).changeAgentState(agent, "999", "19911050027", true);	

		Map<String, Object> response = sessionManager.teamMemberLogout("403466", session);
		assertEquals(1, response.get("statusCode"));
		
	}
	
	@Test
	public void testChangeAgentStateBySupervisorWhenNotReady() throws Exception {
		Agent currentAgent = PowerMockito.spy(new Agent());
		doReturn(2).when(currentAgent).GetValueIntObj(Cti_IKeywordIDs.CTI_AGENTSTATE);
		
		doReturn(1).when(sessionManager).changeAgentState(currentAgent, "999", "19911050027");
		
		int statusCode = sessionManager.changeAgentState(currentAgent, "999", "19911050027", true);
		assertEquals(1, statusCode);
	}
		
	@Test
	public void testChangeAgentStateBySupervisorWhenReady() throws Exception {
		Agent currentAgent = PowerMockito.spy(new Agent());
		doReturn(3).when(currentAgent).GetValueIntObj(Cti_IKeywordIDs.CTI_AGENTSTATE);
		
		WaitObject waitObject = PowerMockito.spy(new WaitObject());
		doReturn(waitObject).when(ctiSession).CreateWaitObject((Arguments)anyObject());
		
		doReturn(1).when(sessionManager).changeAgentState(currentAgent, "19911050027", 2, "999");
		
		doReturn(1).when(waitObject).WaitOnMultipleEvents(0);
		int iEventID = Cti_Enums.EventID.eControlFailureConf;
		doReturn(iEventID).when(waitObject).GetTriggerEvent();
		
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(args).when(waitObject).GetTriggerEventArgs();
		doNothing().when(ctiSession).DestroyWaitObject(waitObject);
		//doReturn(1).when(sessionManager).changeAgentState(currentAgent,"999", "19911050027", true);
		int statusCode = sessionManager.changeAgentState(currentAgent, "999", "19911050027", true);
		assertEquals(1, statusCode);
	}

	@Test
	public void testChangeAgentStateBySupervisorWhenReservedState() throws Exception {
		Agent currentAgent = PowerMockito.spy(new Agent());
		doReturn(8).when(currentAgent).GetValueIntObj(Cti_IKeywordIDs.CTI_AGENTSTATE);
		
		WaitObject waitObject = PowerMockito.spy(new WaitObject());
		doReturn(waitObject).when(ctiSession).CreateWaitObject((Arguments)anyObject());
		
		doReturn(1).when(sessionManager).changeAgentState(currentAgent, "19911050027", 2, "999");
		
		doReturn(1).when(waitObject).WaitOnMultipleEvents(0);
		int iEventID = Cti_Enums.EventID.eAgentStateEvent;
		doReturn(iEventID).when(waitObject).GetTriggerEvent();
		
		Arguments args = PowerMockito.spy(new Arguments());
		doReturn(args).when(waitObject).GetTriggerEventArgs();
		doNothing().when(ctiSession).DestroyWaitObject(waitObject);
		doReturn(1).when(sessionManager).changeAgentState(currentAgent,"999", "19911050027", true);
		int statusCode = sessionManager.changeAgentState(currentAgent, "999", "19911050027", true);
		assertEquals(1, statusCode);
	}

	@Test
	public void testRepeatTeamMemberLogoutBySupervisorWhenReady() throws Exception {
		
		Arguments rEventArgs = PowerMockito.spy(new Arguments());
		doReturn("3").when(rEventArgs).GetValueString(Cti_IKeywordIDs.CTI_AGENTSTATE);

		Agent currentAgent = PowerMockito.spy(new Agent());
		doReturn(currentAgent).when(ctiSession).GetObjectFromObjectID(anyString());
		
		//doReturn(3).when(currentAgent).GetValueIntObj(Cti_IKeywordIDs.CTI_AGENTSTATE);
	
		doReturn(3).when(currentAgent).GetAgentState();
		doReturn("19911050027").when(currentAgent).GetValueString(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT);
		
		
		doReturn(1).when(sessionManager).changeAgentState(currentAgent, "19911050027", 2, "999");
		int statusCode = sessionManager.changeAgentState(currentAgent, "19911050027", 2, "999");
		sessionManager.repeatTeamMemberLogout("47483672", rEventArgs );
		assertEquals(1, statusCode);		
	}

	@Test
	public void testRepeatTeamMemberLogoutBySupervisorWhenNotReady() throws Exception {
		
		Arguments rEventArgs = PowerMockito.spy(new Arguments());
		doReturn("2").when(rEventArgs).GetValueString(Cti_IKeywordIDs.CTI_AGENTSTATE);

		Agent currentAgent = PowerMockito.spy(new Agent());
		doReturn(currentAgent).when(ctiSession).GetObjectFromObjectID(anyString());
		
		//doReturn(3).when(currentAgent).GetValueIntObj(Cti_IKeywordIDs.CTI_AGENTSTATE);
	
		doReturn(2).when(currentAgent).GetAgentState();
		doReturn("19911050027").when(currentAgent).GetValueString(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT);
		
		Set<String> teamLogoutSet = new HashSet<String>();
		teamLogoutSet.add("47483672");

		doReturn(1).when(sessionManager).changeAgentState(currentAgent, "999", "19911050027");
		int statusCode = sessionManager.changeAgentState(currentAgent, "999", "19911050027");
		sessionManager.repeatTeamMemberLogout("47483672", rEventArgs );
		assertEquals(1, statusCode);		
	}
	
/*	@Test
	public void testStopSilentMonitor() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		sessionManager.setM_iPeripheralID("5000");
		doReturn(agent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn("19911050027").when(agent).GetValueString(Cti_IKeywordIDs.CTI_AGENTINSTRUMENT);
		
		doReturn(2).when(agent).GetValueIntObj(Cti_IKeywordIDs.CTI_AGENTSTATE);		
		
	

		Map<String, Object> responseMap = new LinkedHashMap<String, Object>();
		responseMap.put(ACTION, "stopsilentmonitor");
		responseMap.put(STATUS_CODE, 1);
		doReturn(responseMap).when(sessionManager).hangup("403466");
		
		Map<String, Object> response = sessionManager.stopSilentMonitor("403466");
		assertEquals("stopsilentmonitor", response.get("action"));
		
	}*/

	@Test
	public void testOnListAgentTeamConf() throws Exception {
		Arguments teamArgs = PowerMockito.spy(new Arguments());
		teamArgs.SetValue(1, "team.5000.5004");
		teamArgs.SetValue(2, "team.5000.5006");
		
		Arguments skillGroupsArguments = PowerMockito.spy(new Arguments());
		skillGroupsArguments.SetValue(Cti_IKeywordIDs.CTI_SKILLGROUPNUMBER, "112");
		
		Arguments args = PowerMockito.spy(new Arguments());
		args.SetValue("NumberOfAgentTeams", 1);
		args.SetValue("Teams", teamArgs);
		args.SetValue("UniqueObjectID", "agent.5000.47483703");
		
		Team team1 = PowerMockito.spy(new Team());
		doReturn(team1).when(ctiSession).GetObjectFromObjectID("team.5000.5004");		

		Arguments agentArgs = PowerMockito.spy(new Arguments());
		Agent agent1 = PowerMockito.spy(new Agent());
		agent1.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.404046");
		agent1.SetValue(Cti_IKeywordIDs.CTI_AGENTID, "404046");
		agent1.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "OE0RQ8");	
		agent1.SetValue(Cti_IKeywordIDs.CTI_AGENTSTATE, "2");	
		agent1.SetValue(Cti_IKeywordIDs.CTI_AGENTLASTNAME, "OE0RQ8");
		agent1.SetValue(Cti_IKeywordIDs.CTI_AGENTFIRSTNAME, "OE0RQ8");
		agent1.SetValue(Cti_IKeywordIDs.CTI_SKILLGROUPS, skillGroupsArguments);
		agentArgs.SetValue("agent.5000.404046","404046");

		Agent agent2 = PowerMockito.spy(new Agent());
		agent2.SetValue(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID, "agent.5000.47483697");
		agent2.SetValue(Cti_IKeywordIDs.CTI_AGENTID, "47483697");
		agent2.SetValue(Cti_IKeywordIDs.CTI_LOGINNAME, "OE0RQ9");	
		agent2.SetValue(Cti_IKeywordIDs.CTI_AGENTSTATE, "3");	
		agent2.SetValue(Cti_IKeywordIDs.CTI_AGENTLASTNAME, "OE0RQ9");
		agent2.SetValue(Cti_IKeywordIDs.CTI_AGENTFIRSTNAME, "OE0RQ9");
		agent2.SetValue(Cti_IKeywordIDs.CTI_SKILLGROUPS, skillGroupsArguments);
		agentArgs.SetValue("agent.5000.47483697","47483697");
		
		doReturn(agentArgs).when(team1).GetValueArray(Cti_IKeywordIDs.CTI_AGENTS);	

		doReturn(agent1).when(ctiSession).GetObjectFromObjectID("agent.5000.404046");	
		doReturn(agent2).when(ctiSession).GetObjectFromObjectID("agent.5000.47483697");		

		doReturn(skillGroupsArguments).when(agent1).GetSkillGroups();	
		doReturn(skillGroupsArguments).when(agent2).GetSkillGroups();
		
		SkillGroup skillGroup = PowerMockito.spy(new SkillGroup());
		skillGroup.SetValue(Cti_IKeywordIDs.CTI_SKILLGROUPNUMBER, "112");
		skillGroup.SetValue(Cti_IKeywordIDs.CTI_SKILLGROUPNAME, "CC_PG9_Support_C2");
		doReturn(skillGroup).when(ctiSession).GetObjectFromObjectID("SkillGroupNumber");
		
		Map<String, Set<Session>> agentsSocketSessions = new HashMap<String, Set<Session>>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		Set<Session> listOfAgentSessionInfo = new HashSet<Session>();
		listOfAgentSessionInfo.add(session);
		agentsSocketSessions.put("47483703", listOfAgentSessionInfo);
		sessionManager.setAgentsSocketSessions(agentsSocketSessions);

		//doReturn(listOfAgentSessionInfo).when(agentsSocketSessions).get("agent.5000.47483703");	

		doReturn(true).when(session).isOpen();
		doNothing().when(sessionMessageHandler).sendMessageToClient((Session) anyObject(), anyString());
		
		sessionManager.OnEvent(134, args);
		
	}

	@Test
	public void testOnListAgentTeamConfForTeamSizeZero() throws Exception {
		Arguments teamArgs = PowerMockito.spy(new Arguments());
		
		Arguments args = PowerMockito.spy(new Arguments());
		args.SetValue("NumberOfAgentTeams", 0);
		args.SetValue("Teams", teamArgs);
		args.SetValue("UniqueObjectID", "agent.5000.47483703");

		sessionManager.OnEvent(134, args);		
	}

	@Test
	public void testStartSilentMonitorForCalls0() throws Exception {
		sessionManager.setM_iPeripheralID("5000");
		Agent supervisorAgent = PowerMockito.spy(new Agent());
		doReturn(supervisorAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.47483703");

		Agent teamMemberAgent = PowerMockito.spy(new Agent());
		doReturn(teamMemberAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.404046");

		doReturn("agent.5000.404046").when(teamMemberAgent).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		
		Arguments aCallArgs = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.404046", aCallArgs);
		sessionManager.setM_CallList(callList);
		
		doReturn(0).when(aCallArgs).NumElements();
		
		Map<String, Object> response = sessionManager.startSilentMonitor("47483703", "404046");
		assertEquals(2, response.get("statusCode"));
		
	}
	@Test
	public void testStartSilentMonitor() throws Exception {
		sessionManager.setM_iPeripheralID("5000");
		Agent supervisorAgent = PowerMockito.spy(new Agent());
		doReturn(supervisorAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.47483703");

		Agent teamMemberAgent = PowerMockito.spy(new Agent());
		doReturn(teamMemberAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.404046");

		doReturn("agent.5000.404046").when(teamMemberAgent).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		
		Arguments aCallArgs = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.404046", aCallArgs);
		sessionManager.setM_CallList(callList);
		
		doReturn(1).when(aCallArgs).NumElements();
		
		CilRefArg currRefArg =  PowerMockito.spy(new CilRefArg());
		doReturn(currRefArg).when(aCallArgs).GetElement(1);
		
		Call currentCall = PowerMockito.spy(new Call());
		doReturn(currentCall).when(currRefArg).GetValue();
		short callStatus = 3;
		doReturn(callStatus).when(currentCall).GetValueShortObj(Cti_IKeywordIDs.CTI_CALLSTATUS);
		doReturn(2).when(currentCall).GetValueIntObj(Cti_IKeywordIDs.CTI_CALLTYPE);
		doReturn("call.5000.56791511.19911050027").when(currentCall).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		
		doReturn(1).when(supervisorAgent).SuperviseCall((Arguments)anyObject());
		Map<String, Object> response = sessionManager.startSilentMonitor("47483703", "404046");
		assertEquals(1, response.get("statusCode"));
		
	}	
	
	
	/** StartSilentMonitorWithLogin **/
	
	@Test
	public void testStartSilentMonitorWithNullLogin() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("MARCTEST", "agent.5000.403466");
		agentAliasMap.put("TEST1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		sessionManager.setAgentAliasMap(agentAliasMap);
		String alias = "MARCTEST";
		String acdNumber = "19911050027";
		Agent supervisorAgent = PowerMockito.spy(new Agent());
		doReturn(supervisorAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(null).when(sessionManager).login(alias, acdNumber, session, true);
		Map<String, Object> response = sessionManager.startSilentMonitorWithLogin(alias, "62842208", acdNumber, session);
	    
	    assertNull(response);
	}
	
	
	@Test
	public void testStartSilentMonitorWithNullLoginStatusCode() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("MARCTEST", "agent.5000.403466");
		agentAliasMap.put("TEST1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		sessionManager.setAgentAliasMap(agentAliasMap);
		String alias = "MARCTEST";
		String acdNumber = "19911050027";
		Agent supervisorAgent = PowerMockito.spy(new Agent());
		doReturn(supervisorAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		
		Map<String, Object> loginResponse = new HashMap<String, Object>();
		loginResponse.put(STATUS_CODE, null);
		doReturn(loginResponse).when(sessionManager).login(alias, acdNumber, session, true);
		Map<String, Object> response = sessionManager.startSilentMonitorWithLogin(alias, "62842208", acdNumber, session);
	    
	    assertNull(response);
	}
	
	
	@Test
	public void testStartSilentMonitorWithLoginStatusCode10150() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("MARCTEST", "agent.5000.403466");
		agentAliasMap.put("TEST1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		sessionManager.setAgentAliasMap(agentAliasMap);
		String alias = "MARCTEST";
		String acdNumber = "19911050027";
		Agent supervisorAgent = PowerMockito.spy(new Agent());
		doReturn(supervisorAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		
		Map<String, Object> loginResponse = new HashMap<String, Object>();
		loginResponse.put(STATUS_CODE, 10150);
		doReturn(loginResponse).when(sessionManager).login(alias, acdNumber, session, true);
		Map<String, Object> response = sessionManager.startSilentMonitorWithLogin(alias, "62842208", acdNumber, session);
	    
	    assertEquals("startsilentmonitor", response.get("action"));
	}
	
	
	@Test
	public void testStartSilentMonitorWithLoginStatusCode1() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("MARCTEST", "agent.5000.403466");
		agentAliasMap.put("TEST1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		sessionManager.setAgentAliasMap(agentAliasMap);
		sessionManager.setM_iPeripheralID("5000");
		String alias = "MARCTEST";
		String acdNumber = "19911050027";
		Agent supervisorAgent = PowerMockito.spy(new Agent());
		doReturn(supervisorAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(2).when(supervisorAgent).GetValueIntObj(Cti_IKeywordIDs.CTI_AGENTSTATE);
		Map<String, Object> loginResponse = new HashMap<String, Object>();
		loginResponse.put(STATUS_CODE, 1);
		doReturn(loginResponse).when(sessionManager).login(alias, acdNumber, session, true);
/*		
		WaitObject waitObject = PowerMockito.spy(new WaitObject());
		doReturn(waitObject).when(ctiSession).CreateWaitObject((Arguments)anyObject());
		doReturn(30).when(waitObject).GetTriggerEvent();
		doNothing().when(ctiSession).DestroyWaitObject(waitObject);
		doReturn(new Arguments()).when(waitObject).GetTriggerEventArgs();
*/		
		Agent monitoringAgent = PowerMockito.spy(new Agent());
		doReturn(monitoringAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.62842208");
		doReturn("agent.5000.62842208").when(monitoringAgent).GetValueString(469);
		
		Arguments newArgs = PowerMockito.spy(new Arguments());
		Map<String, Arguments> map = new HashMap<String, Arguments>();
		map.put("agent.5000.403466", newArgs);
		sessionManager.setM_CallList(map);
		
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.62842208", newArgs);
		sessionManager.setM_CallList(callList);
		doReturn(1).when(newArgs).NumElements();
		doReturn(cilRefArg).when(newArgs).GetElement(1);
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		
		short callStatus = 3;
		
		doReturn(callStatus).when(call).GetValueShortObj(473);
		doReturn(2).when(call).GetValueIntObj(14);
		doReturn("call.5000.42365369.19911050027").when(call).GetValueString(469);
		
		supervisorAgent.SetValue(Cti_IKeywordIDs.CTI_AGENTID, "403466");
		newArgs.SetValue(Cti_IKeywordIDs.CTI_EVENTID, 30);
		SFAgent sfAgent = new SFAgent();
		sfAgent.setRecEventArgs(newArgs);
		Map<String, SFAgent> supervisorMap = new ConcurrentHashMap<String, SFAgent>();
		supervisorMap.put("403466", sfAgent);
		sessionManager.setSupervisorMap(supervisorMap);
		
		Map<String, Object> response = sessionManager.startSilentMonitorWithLogin(alias, "62842208", acdNumber, session);
	    assertEquals("startsilentmonitor", response.get("action"));
	}
	
	
	
	@Test
	public void testStartSilentMonitorWithSilentMonitorFalse() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("MARCTEST", "agent.5000.403466");
		agentAliasMap.put("TEST1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		sessionManager.setAgentAliasMap(agentAliasMap);
		sessionManager.setM_iPeripheralID("5000");
		String alias = "MARCTEST";
		String acdNumber = "19911050027";
		Agent supervisorAgent = PowerMockito.spy(new Agent());
		doReturn(supervisorAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.403466");
		doReturn(2).when(supervisorAgent).GetValueIntObj(10);
		
		Map<String, Object> loginResponse = new HashMap<String, Object>();
		loginResponse.put(STATUS_CODE, 1);
		doReturn(loginResponse).when(sessionManager).login(alias, acdNumber, session, true);
		
		WaitObject waitObject = PowerMockito.spy(new WaitObject());
		doReturn(waitObject).when(ctiSession).CreateWaitObject((Arguments)anyObject());
		doReturn(30).when(waitObject).GetTriggerEvent();
		doNothing().when(ctiSession).DestroyWaitObject(waitObject);
		doReturn(new Arguments()).when(waitObject).GetTriggerEventArgs();
		
		Agent monitoringAgent = PowerMockito.spy(new Agent());
		doReturn(monitoringAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.62842208");
		doReturn("agent.5000.62842208").when(monitoringAgent).GetValueString(469);
		
		Arguments newArgs = PowerMockito.spy(new Arguments());
		Map<String, Arguments> map = new HashMap<String, Arguments>();
		map.put("agent.5000.403466", newArgs);
		sessionManager.setM_CallList(map);
		
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.62842208", newArgs);
		sessionManager.setM_CallList(callList);
		doReturn(1).when(newArgs).NumElements();
		doReturn(cilRefArg).when(newArgs).GetElement(1);
		
		Call call = PowerMockito.spy(new Call());
		doReturn(call).when(cilRefArg).GetValue();
		
		short callStatus = 2;
		
		doReturn(callStatus).when(call).GetValueShortObj(473);
		doReturn(2).when(call).GetValueIntObj(14);
		doReturn("call.5000.42365369.19911050027").when(call).GetValueString(469);
		
		
		supervisorAgent.SetValue(Cti_IKeywordIDs.CTI_AGENTID, "403466");
		newArgs.SetValue(Cti_IKeywordIDs.CTI_EVENTID, 30);
		SFAgent sfAgent = new SFAgent();
		sfAgent.setRecEventArgs(newArgs);
		Map<String, SFAgent> supervisorMap = new ConcurrentHashMap<String, SFAgent>();
		supervisorMap.put("403466", sfAgent);
		sessionManager.setSupervisorMap(supervisorMap);
		
		Map<String, Object> response = sessionManager.startSilentMonitorWithLogin(alias, "62842208", acdNumber, session);
	    assertEquals(2, response.get("statusCode"));
	}
	
	//##################
	
	@Test
	public void testOnConfigSkillGroupEvent() throws Exception {
		
		Arguments rEventArgs = PowerMockito.spy(new Arguments());
		doReturn(1).when(rEventArgs).GetValueIntObj(720);
		Arguments arguments = PowerMockito.spy(new Arguments());
		doReturn(arguments).when(rEventArgs).GetValueArray(Cti_IKeywordIDs.CTI_SKILLGROUPS);
		Arguments skillGroupArgument = PowerMockito.spy(new Arguments());
		doReturn(skillGroupArgument).when(arguments).GetElementArguments(1);
		doReturn("000613614200").when(skillGroupArgument).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		sessionManager.OnEvent(236, rEventArgs);
	}	
	
	@Test
	public void testOnConfigSkillGroupEventOnSkillGroupIdNull() throws Exception {
		
		Arguments rEventArgs = PowerMockito.spy(new Arguments());
		doReturn(1).when(rEventArgs).GetValueIntObj(720);
		Arguments arguments = PowerMockito.spy(new Arguments());
		doReturn(arguments).when(rEventArgs).GetValueArray(Cti_IKeywordIDs.CTI_SKILLGROUPS);
		Arguments skillGroupArgument = PowerMockito.spy(new Arguments());
		doReturn(skillGroupArgument).when(arguments).GetElementArguments(1);
		doReturn(null).when(skillGroupArgument).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		sessionManager.OnEvent(236, rEventArgs);
	}	
	
	@Test
	public void testDisableSkillGroupStatisticsByAgentId() throws Exception {
		
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent(anyString());
		Arguments skillGroupsArguments = PowerMockito.spy(new Arguments());
		doReturn(skillGroupsArguments).when(agent).GetSkillGroups();
		doReturn(1).when(skillGroupsArguments).NumElements();
		doReturn("000613614200").when(skillGroupsArguments).GetElementKey(1);
		Set<String> agentList = new HashSet<String>();
		agentList.add("47483697");
		Map<String, Set<String>> skillGroupAgentsMap = new ConcurrentHashMap<String, Set<String>>();
		skillGroupAgentsMap.put("000613614200", agentList);
		sessionManager.setSkillGroupAgentsMap(skillGroupAgentsMap);
		Map<String, Object> response = sessionManager.disableSkillGroupStatisticsByAgentId("47483697", session);
	    assertEquals(2, response.get("statusCode"));
	}
	
	@Test
	public void testDisableSkillGroupStatisticsByAgentIdForEmptyAgentList() throws Exception {
		
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent(anyString());
		Arguments skillGroupsArguments = PowerMockito.spy(new Arguments());
		doReturn(skillGroupsArguments).when(agent).GetSkillGroups();
		doReturn(1).when(skillGroupsArguments).NumElements();
		doReturn("000613614200").when(skillGroupsArguments).GetElementKey(1);
		Set<String> agentList = new HashSet<String>();
		Map<String, Set<String>> skillGroupAgentsMap = new ConcurrentHashMap<String, Set<String>>();
		skillGroupAgentsMap.put("000613614200", agentList);
		sessionManager.setSkillGroupAgentsMap(skillGroupAgentsMap);
		Map<String, Object> response = sessionManager.disableSkillGroupStatisticsByAgentId("47483697", session);
	    assertEquals(2, response.get("statusCode"));
	}
	
	@Test
	public void testDisableSkillGroupStatisticsByAgentIdForEmptySkillGroupList() throws Exception {
		
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent(anyString());
		Arguments skillGroupsArguments = PowerMockito.spy(new Arguments());
		doReturn(skillGroupsArguments).when(agent).GetSkillGroups();
		doReturn(0).when(skillGroupsArguments).NumElements();
		Map<String, Object> response = sessionManager.disableSkillGroupStatisticsByAgentId("47483697", session);
	    assertEquals(3, response.get("statusCode"));
	}
	
	@Test
	public void testDisableSkillGroupStatisticsByAlias() throws Exception {
		
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("MARCTEST", "agent.5000.47483697");
		sessionManager.setAgentAliasMap(agentAliasMap);
		Agent currentAgent = PowerMockito.spy(new Agent());
		doReturn(currentAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.47483697");
		Arguments skillGroupsArguments = PowerMockito.spy(new Arguments());
		doReturn(skillGroupsArguments).when(currentAgent).GetSkillGroups();
		doReturn(1).when(skillGroupsArguments).NumElements();
		doReturn("000613614200").when(skillGroupsArguments).GetElementKey(1);
		Set<String> agentList = new HashSet<String>();
		agentList.add("47483697");
		Map<String, Set<String>> skillGroupAgentsMap = new ConcurrentHashMap<String, Set<String>>();
		skillGroupAgentsMap.put("000613614200", agentList);
		sessionManager.setSkillGroupAgentsMap(skillGroupAgentsMap);
		Map<String, Object> response = sessionManager.disableSkillGroupStatisticsByAlias("MARCTEST", session);
	    assertEquals(2, response.get("statusCode"));
	}
	
	@Test
	public void testDisableSkillGroupStatisticsByAliasForEmptyAgentList() throws Exception {
		
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("MARCTEST", "agent.5000.47483697");
		sessionManager.setAgentAliasMap(agentAliasMap);
		Agent currentAgent = PowerMockito.spy(new Agent());
		doReturn(currentAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.47483697");
		Arguments skillGroupsArguments = PowerMockito.spy(new Arguments());
		doReturn(skillGroupsArguments).when(currentAgent).GetSkillGroups();
		doReturn(1).when(skillGroupsArguments).NumElements();
		doReturn("000613614200").when(skillGroupsArguments).GetElementKey(1);
		Set<String> agentList = new HashSet<String>();
		Map<String, Set<String>> skillGroupAgentsMap = new ConcurrentHashMap<String, Set<String>>();
		skillGroupAgentsMap.put("000613614200", agentList);
		sessionManager.setSkillGroupAgentsMap(skillGroupAgentsMap);
		Map<String, Object> response = sessionManager.disableSkillGroupStatisticsByAlias("MARCTEST", session);
	    assertEquals(2, response.get("statusCode"));
	}
	
	@Test
	public void testDisableSkillGroupStatisticsByAliasForEmptySkillGroupList() throws Exception {
		
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("MARCTEST", "agent.5000.47483697");
		sessionManager.setAgentAliasMap(agentAliasMap);
		Agent currentAgent = PowerMockito.spy(new Agent());
		doReturn(currentAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.47483697");
		Arguments skillGroupsArguments = PowerMockito.spy(new Arguments());
		doReturn(skillGroupsArguments).when(currentAgent).GetSkillGroups();
		doReturn(0).when(skillGroupsArguments).NumElements();
		Map<String, Object> response = sessionManager.disableSkillGroupStatisticsByAlias("MARCTEST", session);
	    assertEquals(3, response.get("statusCode"));
	}
	
	@Test
	public void testEnableSkillGroupStatisticsByAgentId() throws Exception {
		
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent(anyString());
		Arguments skillGroupsArguments = PowerMockito.spy(new Arguments());
		doReturn(skillGroupsArguments).when(agent).GetSkillGroups();
		doReturn(1).when(skillGroupsArguments).NumElements();
		doReturn("000613614200").when(skillGroupsArguments).GetElementKey(1);
		Set<String> agentList = new HashSet<String>();
		agentList.add("47483697");
		Map<String, Set<String>> skillGroupAgentsMap = new ConcurrentHashMap<String, Set<String>>();
		skillGroupAgentsMap.put("000613614200", agentList);
		sessionManager.setSkillGroupAgentsMap(skillGroupAgentsMap);
		SkillGroup skillGroup = PowerMockito.spy(new SkillGroup());
		doReturn(skillGroup).when(ctiSession).GetObjectFromObjectID("000613614200");
		Map<String, Object> response = sessionManager.enableSkillGroupStatisticsByAgentId("47483697", session);
	    assertEquals(1, response.get("statusCode"));
	}
	
	@Test
	public void testEnableSkillGroupStatisticsByAlias() throws Exception {
		doReturn("10").when(session).getId();
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("MARCTEST", "agent.5000.47483697");
		sessionManager.setAgentAliasMap(agentAliasMap);
		sessionManager.setM_iPeripheralID("5000");
		Agent currentAgent = PowerMockito.spy(new Agent());
		doReturn(currentAgent).when(ctiSession).GetObjectFromObjectID("agent.5000.47483697");
		Arguments skillGroupsArguments = PowerMockito.spy(new Arguments());
		doReturn(skillGroupsArguments).when(currentAgent).GetSkillGroups();
		doReturn(1).when(skillGroupsArguments).NumElements();
		doReturn("000613614200").when(skillGroupsArguments).GetElementKey(1);
		Set<String> agentList = new HashSet<String>();
		agentList.add("47483697");
		Map<String, Set<String>> skillGroupAgentsMap = new ConcurrentHashMap<String, Set<String>>();
		skillGroupAgentsMap.put("000613614200", agentList);
		sessionManager.setSkillGroupAgentsMap(skillGroupAgentsMap);
		SkillGroup skillGroup = PowerMockito.spy(new SkillGroup());
		doReturn(skillGroup).when(ctiSession).GetObjectFromObjectID("000613614200");
		Map<String, Object> response = sessionManager.enableSkillGroupStatisticsByAlias("MARCTEST", session);
	    assertEquals(1, response.get("statusCode"));
	}
	
	@Test
	public void testOnQuerySkillGroupStatisticsConf() throws Exception {
		
		Arguments rEventArgs = PowerMockito.spy(new Arguments());
		doReturn("000613614200").when(rEventArgs).GetValueString(469);
		Set<String> agentList = new HashSet<String>();
		agentList.add("47483697");
		Map<String, Set<String>> skillGroupAgentsMap = new ConcurrentHashMap<String, Set<String>>();
		skillGroupAgentsMap.put("000613614200", agentList);
		sessionManager.setSkillGroupAgentsMap(skillGroupAgentsMap);
		Arguments statisticsArguments = PowerMockito.spy(new Arguments());
		doReturn(statisticsArguments).when(rEventArgs).GetValueArray(Cti_IKeywordIDs.CTI_STATISTICS);
		Map<String, Set<Session>> agentsSocketSessions = new HashMap<String, Set<Session>>();
		AgentSessionInfo agentSessionInfo = new AgentSessionInfo();
		agentSessionInfo.setActive(true);
		agentSessionInfo.setSession(session);
		Set<Session> listOfAgentSessionInfo = new HashSet<Session>();
		listOfAgentSessionInfo.add(session);
		agentsSocketSessions.put("47483697", listOfAgentSessionInfo);
		sessionManager.setAgentsSocketSessions(agentsSocketSessions);
		doReturn(true).when(session).isOpen();
		sessionManager.OnEvent(115, rEventArgs);
	}
	
	@Test
	public void testOnQuerySkillGroupStatisticsConfForEmptyAgentSessionList() throws Exception {
		
		Arguments rEventArgs = PowerMockito.spy(new Arguments());
		doReturn("000613614200").when(rEventArgs).GetValueString(469);
		Set<String> agentList = new HashSet<String>();
		agentList.add("47483697");
		Map<String, Set<String>> skillGroupAgentsMap = new ConcurrentHashMap<String, Set<String>>();
		skillGroupAgentsMap.put("000613614200", agentList);
		sessionManager.setSkillGroupAgentsMap(skillGroupAgentsMap);
		Arguments statisticsArguments = PowerMockito.spy(new Arguments());
		doReturn(statisticsArguments).when(rEventArgs).GetValueArray(Cti_IKeywordIDs.CTI_STATISTICS);
		sessionManager.OnEvent(115, rEventArgs);
	}
	
	
	@Test
	public void testStopSilentMonitorByAlias() throws Exception {
		Map<String, String> agentAliasMap = new HashMap<String, String>();
		agentAliasMap.put("marctest", "agent.5000.403466");
		agentAliasMap.put("test1", "agent.5000.62842208");
		agentAliasMap.put("OE034T", "agent.5000.47483696");
		agentAliasMap.put("WO1066", "agent.5000.34700676");
		sessionManager.setAgentAliasMap(agentAliasMap);
		Map<String, Object> response = new HashMap<String, Object>();
		response.put("statusCode", "1");
		doReturn(response).when(sessionManager).hangup("47483696", session);
		sessionManager.stopSilentMonitorByAlias("OE034T", session);
	}
	
	@Test
	public void testSetAgentSessionIdMap() throws Exception {
		Map<String, String> agentSessionIdMap = new HashMap<String, String>();
		agentSessionIdMap.put("10", "403466");
		agentSessionIdMap.put("5a", "62842208");
		sessionManager.setAgentSessionIdMap(agentSessionIdMap);
		assertEquals("403466", sessionManager.getAgentSessionIdMap().get("10"));
	}
	
	@Test
	public void testRequestCallDetails() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent("403466");		
		doReturn(4).when(agent).GetAgentState();
		
		doReturn("agent.5000.403466").when(agent).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		

		
		Call call = PowerMockito.spy(new Call());
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.403466", args);
		sessionManager.setM_CallList(callList);
		doReturn(1).when(args).NumElements();	
		doReturn(cilRefArg).when(args).GetElement(1);
		doReturn(call).when(cilRefArg).GetValue();
		Map<String, Object> response = sessionManager.requestCallDetails("403466", session);
		assertEquals(1, response.get("statusCode"));
	}	

	@Test
	public void testRequestCallDetailsNotTalking() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent("403466");		
		doReturn(3).when(agent).GetAgentState();
		
		doReturn("agent.5000.403466").when(agent).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		
		Map<String, Object> response = sessionManager.requestCallDetails("403466", session);
		assertEquals(0, response.get("statusCode"));
	}	

	@Test
	public void testRequestCallDetailsNoCallArguments() throws Exception {
		Agent agent = PowerMockito.spy(new Agent());
		doReturn(agent).when(sessionManager).getAgent("403466");		
		doReturn(4).when(agent).GetAgentState();
		
		doReturn("agent.5000.403466").when(agent).GetValueString(Cti_IKeywordIDs.CTI_UNIQUEOBJECTID);
		

		
		Call call = PowerMockito.spy(new Call());
		CilRefArg cilRefArg = PowerMockito.spy(new CilRefArg());
		Arguments args = PowerMockito.spy(new Arguments());
		Map<String, Arguments> callList = new HashMap<String, Arguments>();
		callList.put("agent.5000.403466", null);
		sessionManager.setM_CallList(callList);
		/*doReturn(1).when(args).NumElements();	
		doReturn(cilRefArg).when(args).GetElement(1);
		doReturn(call).when(cilRefArg).GetValue();*/
		Map<String, Object> response = sessionManager.requestCallDetails("403466", session);
		assertEquals(0, response.get("statusCode"));
	}	
}	
